name: Upstream self-hosted

on:
  push:
    branches: [ master, ci ]
    paths: [ '**.c', '**.h', '.github/**' ]

jobs:
  selfhosted:
    if: github.repository == 'openssh/openssh-portable-selfhosted'
    runs-on: ${{ matrix.os }}
    env:
      TARGET_HOST: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ obsdsnap, obsdsnap-i386 ]
        configs: [ default, without-openssl, ubsan ]
    steps:
    - uses: actions/checkout@v2
    - name: shutdown VM if running
      run: vmshutdown
    - name: startup VM
      run: vmstartup
    - name: update source
      run: vmrun "cd /usr/src && cvs up -dPA usr.bin/ssh regress/usr.bin/ssh"
    - name: make clean
      run: vmrun "cd /usr/src/usr.bin/ssh && make obj && make clean && cd /usr/src/regress/usr.bin/ssh && make obj && make clean"
    - name: make
      run: vmrun "cd /usr/src/usr.bin/ssh && case ${{ matrix.configs }} in without-openssl) make OPENSSL=no;; ubsan) make DEBUG='-fsanitize-minimal-runtime -fsanitize=undefined';; *) make; esac"
    - name: make install
      run: vmrun "cd /usr/src/usr.bin/ssh && sudo make install"
    - name: make tests`
      run: vmrun "cd /usr/src/regress/usr.bin/ssh && case ${{ matrix.configs }} in without-openssl) make OPENSSL=no;; ubsan) make DEBUG='-fsanitize-minimal-runtime -fsanitize=undefined';; *) make; esac"
      env:
        SUDO: sudo
      timeout-minutes: 300
    - name: save logs
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.configs }}-logs
        path: |
          /usr/obj/regress/usr.bin/ssh/*.log
    - name: shutdown VM
      if: always()
      run: vmshutdown
