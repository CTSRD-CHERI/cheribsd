# This file tells config what files go into building a kernel,
# files marked standard are always included.
#
# $FreeBSD$
#

# common files stuff between i386 and amd64
include 	"conf/files.x86"

# The long compile-with and dependency lines are required because of
# limitations in config: backslash-newline doesn't work in strings, and
# dependency lines other than the first are silently ignored.
#
#
cloudabi32_vdso.o		optional	compat_cloudabi32	\
	dependency	"$S/contrib/cloudabi/cloudabi_vdso_i686_on_64bit.S" \
	compile-with	"${CC} -x assembler-with-cpp -m32 -shared -nostdinc -nostdlib -Wl,-T$S/compat/cloudabi/cloudabi_vdso.lds $S/contrib/cloudabi/cloudabi_vdso_i686_on_64bit.S -o ${.TARGET}" \
	no-obj no-implicit-rule						\
	clean		"cloudabi32_vdso.o"
#
cloudabi32_vdso_blob.o		optional	compat_cloudabi32	\
	dependency 	"cloudabi32_vdso.o"				\
	compile-with	"${OBJCOPY} --input-target binary --output-target elf64-x86-64-freebsd --binary-architecture i386 cloudabi32_vdso.o ${.TARGET}" \
	no-implicit-rule						\
	clean		"cloudabi32_vdso_blob.o"
#
cloudabi64_vdso.o		optional	compat_cloudabi64	\
	dependency	"$S/contrib/cloudabi/cloudabi_vdso_x86_64.S"	\
	compile-with	"${CC} -x assembler-with-cpp -shared -nostdinc -nostdlib -Wl,-T$S/compat/cloudabi/cloudabi_vdso.lds $S/contrib/cloudabi/cloudabi_vdso_x86_64.S -o ${.TARGET}" \
	no-obj no-implicit-rule						\
	clean		"cloudabi64_vdso.o"
#
cloudabi64_vdso_blob.o		optional	compat_cloudabi64	\
	dependency 	"cloudabi64_vdso.o"				\
	compile-with	"${OBJCOPY} --input-target binary --output-target elf64-x86-64-freebsd --binary-architecture i386 cloudabi64_vdso.o ${.TARGET}" \
	no-implicit-rule						\
	clean		"cloudabi64_vdso_blob.o"
#
linux32_genassym.o		optional	compat_linux32		\
	dependency 	"$S/amd64/linux32/linux32_genassym.c offset.inc"		\
	compile-with	"${CC} ${CFLAGS:N-flto:N-fno-common} -c ${.IMPSRC}" \
	no-obj no-implicit-rule						\
	clean		"linux32_genassym.o"
#
linux32_assym.h			optional	compat_linux32		\
	dependency 	"$S/kern/genassym.sh linux32_genassym.o"	\
	compile-with	"sh $S/kern/genassym.sh linux32_genassym.o > ${.TARGET}" \
	no-obj no-implicit-rule before-depend				\
	clean		"linux32_assym.h"
#
linux32_locore.o	optional	compat_linux32		\
	dependency 	"linux32_assym.h $S/amd64/linux32/linux32_locore.asm"	\
	compile-with	"${CC} -x assembler-with-cpp -DLOCORE -m32 -shared -s -pipe -I. -I$S ${WERROR} -Wall -fPIC -fno-common -nostdinc -nostdlib -Wl,-T$S/amd64/linux32/linux32_vdso.lds.s -Wl,-soname=linux32_vdso.so,--eh-frame-hdr,-warn-common ${.IMPSRC} -o ${.TARGET}" \
	no-obj no-implicit-rule						\
	clean		"linux32_locore.o"
#
linux32_vdso.so		optional	compat_linux32			\
	dependency 	"linux32_locore.o"				\
	compile-with	"${OBJCOPY} --input-target binary --output-target elf64-x86-64-freebsd --binary-architecture i386 linux32_locore.o ${.TARGET}" \
	no-implicit-rule						\
	clean		"linux32_vdso.so"
#
ia32_genassym.o			standard				\
	dependency 	"$S/compat/ia32/ia32_genassym.c offset.inc"		\
	compile-with	"${CC} ${CFLAGS:N-flto:N-fno-common} -c ${.IMPSRC}" \
	no-obj no-implicit-rule						\
	clean		"ia32_genassym.o"
#
ia32_assym.h			standard				\
	dependency 	"$S/kern/genassym.sh ia32_genassym.o"		\
	compile-with	"env NM='${NM}' NMFLAGS='${NMFLAGS}' sh $S/kern/genassym.sh ia32_genassym.o > ${.TARGET}" \
	no-obj no-implicit-rule before-depend				\
	clean		"ia32_assym.h"
#
font.h				optional	sc_dflt_font		\
	compile-with	"uudecode < /usr/share/syscons/fonts/${SC_DFLT_FONT}-8x16.fnt && file2c 'static u_char dflt_font_16[16*256] = {' '};' < ${SC_DFLT_FONT}-8x16 > font.h && uudecode < /usr/share/syscons/fonts/${SC_DFLT_FONT}-8x14.fnt && file2c 'static u_char dflt_font_14[14*256] = {' '};' < ${SC_DFLT_FONT}-8x14 >> font.h && uudecode < /usr/share/syscons/fonts/${SC_DFLT_FONT}-8x8.fnt && file2c 'static u_char dflt_font_8[8*256] = {' '};' < ${SC_DFLT_FONT}-8x8 >> font.h"									\
	no-obj no-implicit-rule before-depend				\
	clean		"font.h ${SC_DFLT_FONT}-8x14 ${SC_DFLT_FONT}-8x16 ${SC_DFLT_FONT}-8x8"
#
atkbdmap.h			optional	atkbd_dflt_keymap	\
	compile-with	"kbdcontrol -P ${S:S/sys$/share/}/vt/keymaps -P ${S:S/sys$/share/}/syscons/keymaps -L ${ATKBD_DFLT_KEYMAP} | sed -e 's/^static keymap_t.* = /static keymap_t key_map = /' -e 's/^static accentmap_t.* = /static accentmap_t accent_map = /' > atkbdmap.h"			\
	no-obj no-implicit-rule before-depend				\
	clean		"atkbdmap.h"
#
amd64/acpica/acpi_machdep.c	optional	acpi
acpi_wakecode.o			optional	acpi			\
	dependency	"$S/amd64/acpica/acpi_wakecode.S assym.inc"	\
	compile-with	"${NORMAL_S}"					\
	no-obj no-implicit-rule before-depend				\
	clean		"acpi_wakecode.o"
acpi_wakecode.bin		optional	acpi			\
	dependency	"acpi_wakecode.o"				\
	compile-with	"${OBJCOPY} -S -O binary acpi_wakecode.o ${.TARGET}" \
	no-obj no-implicit-rule	before-depend				\
	clean		"acpi_wakecode.bin"
acpi_wakecode.h			optional	acpi			\
	dependency	"acpi_wakecode.bin"				\
	compile-with	"file2c -sx 'static char wakecode[] = {' '};' < acpi_wakecode.bin > ${.TARGET}" \
	no-obj no-implicit-rule	before-depend				\
	clean		"acpi_wakecode.h"
acpi_wakedata.h			optional	acpi			\
	dependency	"acpi_wakecode.o"				\
	compile-with	'${NM} -n --defined-only acpi_wakecode.o | while read offset dummy what; do echo "#define	$${what}	0x$${offset}"; done > ${.TARGET}' \
	no-obj no-implicit-rule	before-depend				\
	clean		"acpi_wakedata.h"
#
#amd64/amd64/apic_vector.S	standard
amd64/amd64/bios.c		standard
amd64/amd64/bpf_jit_machdep.c	optional	bpf_jitter
amd64/amd64/copyout.c		standard
amd64/amd64/cpu_switch.S	standard
amd64/amd64/db_disasm.c		optional	ddb
amd64/amd64/db_interface.c	optional	ddb
amd64/amd64/db_trace.c		optional	ddb
amd64/amd64/efirt_machdep.c	optional	efirt
amd64/amd64/efirt_support.S	optional	efirt
amd64/amd64/elf_machdep.c	standard
amd64/amd64/exception.S		standard
amd64/amd64/fpu.c		standard
amd64/amd64/gdb_machdep.c	optional	gdb
amd64/amd64/in_cksum.c		optional	inet | inet6
amd64/amd64/initcpu.c		standard
amd64/amd64/io.c		optional	io
amd64/amd64/locore.S		standard	no-obj
amd64/amd64/xen-locore.S	optional	xenhvm
amd64/amd64/machdep.c		standard
amd64/amd64/mem.c		optional	mem
amd64/amd64/minidump_machdep.c	standard
amd64/amd64/mp_machdep.c	optional	smp
amd64/amd64/mpboot.S		optional	smp
amd64/amd64/pmap.c		standard
amd64/amd64/prof_machdep.c	optional	profiling-routine
amd64/amd64/ptrace_machdep.c	standard
amd64/amd64/sigtramp.S		standard
amd64/amd64/support.S		standard
amd64/amd64/sys_machdep.c	standard
amd64/amd64/trap.c		standard
amd64/amd64/uio_machdep.c	standard
amd64/amd64/uma_machdep.c	standard
amd64/amd64/vm_machdep.c	standard
amd64/cloudabi32/cloudabi32_sysvec.c		optional compat_cloudabi32
amd64/cloudabi64/cloudabi64_sysvec.c		optional compat_cloudabi64
amd64/pci/pci_cfgreg.c		optional	pci
cddl/dev/dtrace/amd64/dtrace_asm.S			optional dtrace compile-with "${DTRACE_S}"
cddl/dev/dtrace/amd64/dtrace_subr.c			optional dtrace compile-with "${DTRACE_C}"
crypto/aesni/aeskeys_amd64.S	optional aesni
crypto/blowfish/bf_enc.c	optional	crypto | ipsec | ipsec_support
crypto/des/des_enc.c		optional	crypto | ipsec | \
	ipsec_support | netsmb
dev/acpi_support/acpi_wmi_if.m	standard
dev/agp/agp_amd64.c		optional	agp
dev/agp/agp_i810.c		optional	agp
dev/agp/agp_via.c		optional	agp
dev/amdgpio/amdgpio.c		optional	amdgpio
dev/hyperv/vmbus/amd64/hyperv_machdep.c			optional	hyperv
dev/hyperv/vmbus/amd64/vmbus_vector.S			optional	hyperv
dev/ioat/ioat.c			optional	ioat pci
dev/ioat/ioat_test.c		optional	ioat pci
dev/ixl/if_ixl.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_main.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_qmgr.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_iov.c		optional	ixl pci  pci_iov \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_pf_i2c.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/if_iavf.c		optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/iavf_vc.c			optional	iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/ixl_txrx.c		optional	ixl pci | iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_osdep.c		optional	ixl pci | iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_lan_hmc.c		optional	ixl pci | iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_hmc.c		optional	ixl pci | iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_common.c		optional	ixl pci | iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_nvm.c		optional	ixl pci | iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_adminq.c		optional	ixl pci | iavf pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/ixl/i40e_dcb.c		optional	ixl pci \
	compile-with "${NORMAL_C} -I$S/dev/ixl"
dev/nctgpio/nctgpio.c		optional	nctgpio
dev/nfe/if_nfe.c		optional	nfe pci
dev/ntb/if_ntb/if_ntb.c		optional	if_ntb
dev/ntb/ntb_transport.c		optional	ntb_transport | if_ntb
dev/ntb/ntb.c			optional	ntb | ntb_transport | if_ntb | ntb_hw_amd | ntb_hw_intel | ntb_hw_plx | ntb_hw
dev/ntb/ntb_if.m		optional	ntb | ntb_transport | if_ntb | ntb_hw_amd | ntb_hw_intel | ntb_hw_plx | ntb_hw
dev/ntb/ntb_hw/ntb_hw_amd.c	optional	ntb_hw_amd | ntb_hw
dev/ntb/ntb_hw/ntb_hw_intel.c	optional	ntb_hw_intel | ntb_hw
dev/ntb/ntb_hw/ntb_hw_plx.c	optional	ntb_hw_plx | ntb_hw
dev/ntb/test/ntb_tool.c		optional	ntb_tool
dev/nvram/nvram.c		optional	nvram isa
dev/random/ivy.c		optional	rdrand_rng !random_loadable
dev/random/nehemiah.c		optional	padlock_rng !random_loadable
dev/qlxge/qls_dbg.c		optional	qlxge pci
dev/qlxge/qls_dump.c		optional	qlxge pci
dev/qlxge/qls_hw.c		optional	qlxge pci
dev/qlxge/qls_ioctl.c		optional	qlxge pci
dev/qlxge/qls_isr.c		optional	qlxge pci
dev/qlxge/qls_os.c		optional	qlxge pci
dev/qlxgb/qla_dbg.c		optional	qlxgb pci
dev/qlxgb/qla_hw.c		optional	qlxgb pci
dev/qlxgb/qla_ioctl.c		optional	qlxgb pci
dev/qlxgb/qla_isr.c		optional	qlxgb pci
dev/qlxgb/qla_misc.c		optional	qlxgb pci
dev/qlxgb/qla_os.c		optional	qlxgb pci
dev/qlxgbe/ql_dbg.c		optional	qlxgbe pci
dev/qlxgbe/ql_hw.c		optional	qlxgbe pci
dev/qlxgbe/ql_ioctl.c		optional	qlxgbe pci
dev/qlxgbe/ql_isr.c		optional	qlxgbe pci
dev/qlxgbe/ql_misc.c		optional	qlxgbe pci
dev/qlxgbe/ql_os.c		optional	qlxgbe pci
dev/qlxgbe/ql_reset.c		optional	qlxgbe pci
dev/qlxgbe/ql_fw.c		optional	qlxgbe pci
dev/qlxgbe/ql_boot.c		optional	qlxgbe pci
dev/qlxgbe/ql_minidump.c	optional	qlxgbe pci
dev/qlnx/qlnxe/ecore_cxt.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_dbg_fw_funcs.c optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_dcbx.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_dev.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_hw.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_init_fw_funcs.c optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_init_ops.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_int.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_l2.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_mcp.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_sp_commands.c optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/ecore_spq.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/qlnx_ioctl.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/qlnx/qlnxe/qlnx_os.c	optional	qlnxe pci \
	compile-with "${LINUXKPI_C}"
dev/sfxge/common/ef10_ev.c	optional	sfxge pci
dev/sfxge/common/ef10_filter.c	optional	sfxge pci
dev/sfxge/common/ef10_image.c	optional	sfxge pci
dev/sfxge/common/ef10_intr.c	optional	sfxge pci
dev/sfxge/common/ef10_mac.c	optional	sfxge pci
dev/sfxge/common/ef10_mcdi.c	optional	sfxge pci
dev/sfxge/common/ef10_nic.c	optional	sfxge pci
dev/sfxge/common/ef10_nvram.c	optional	sfxge pci
dev/sfxge/common/ef10_phy.c	optional	sfxge pci
dev/sfxge/common/ef10_rx.c	optional	sfxge pci
dev/sfxge/common/ef10_tx.c	optional	sfxge pci
dev/sfxge/common/ef10_vpd.c	optional	sfxge pci
dev/sfxge/common/efx_bootcfg.c	optional	sfxge pci
dev/sfxge/common/efx_crc32.c	optional	sfxge pci
dev/sfxge/common/efx_ev.c	optional	sfxge pci
dev/sfxge/common/efx_filter.c	optional	sfxge pci
dev/sfxge/common/efx_hash.c	optional	sfxge pci
dev/sfxge/common/efx_intr.c	optional	sfxge pci
dev/sfxge/common/efx_lic.c	optional	sfxge pci
dev/sfxge/common/efx_mac.c	optional	sfxge pci
dev/sfxge/common/efx_mcdi.c	optional	sfxge pci
dev/sfxge/common/efx_mon.c	optional	sfxge pci
dev/sfxge/common/efx_nic.c	optional	sfxge pci
dev/sfxge/common/efx_nvram.c	optional	sfxge pci
dev/sfxge/common/efx_phy.c	optional	sfxge pci
dev/sfxge/common/efx_port.c	optional	sfxge pci
dev/sfxge/common/efx_rx.c	optional	sfxge pci
dev/sfxge/common/efx_sram.c	optional	sfxge pci
dev/sfxge/common/efx_tunnel.c	optional	sfxge pci
dev/sfxge/common/efx_tx.c	optional	sfxge pci
dev/sfxge/common/efx_vpd.c	optional	sfxge pci
dev/sfxge/common/hunt_nic.c	optional	sfxge pci
dev/sfxge/common/mcdi_mon.c	optional	sfxge pci
dev/sfxge/common/medford_nic.c	optional	sfxge pci
dev/sfxge/common/medford2_nic.c	optional	sfxge pci
dev/sfxge/common/siena_mac.c	optional	sfxge pci
dev/sfxge/common/siena_mcdi.c	optional	sfxge pci
dev/sfxge/common/siena_nic.c	optional	sfxge pci
dev/sfxge/common/siena_nvram.c	optional	sfxge pci
dev/sfxge/common/siena_phy.c	optional	sfxge pci
dev/sfxge/common/siena_sram.c	optional	sfxge pci
dev/sfxge/common/siena_vpd.c	optional	sfxge pci
dev/sfxge/sfxge.c		optional	sfxge pci
dev/sfxge/sfxge_dma.c		optional	sfxge pci
dev/sfxge/sfxge_ev.c		optional	sfxge pci
dev/sfxge/sfxge_intr.c		optional	sfxge pci
dev/sfxge/sfxge_mcdi.c		optional	sfxge pci
dev/sfxge/sfxge_nvram.c		optional	sfxge pci
dev/sfxge/sfxge_port.c		optional	sfxge pci
dev/sfxge/sfxge_rx.c		optional	sfxge pci
dev/sfxge/sfxge_tx.c		optional	sfxge pci
dev/smartpqi/smartpqi_cam.c     optional 	smartpqi
dev/smartpqi/smartpqi_cmd.c     optional 	smartpqi
dev/smartpqi/smartpqi_discovery.c	optional	smartpqi
dev/smartpqi/smartpqi_event.c   optional 	smartpqi
dev/smartpqi/smartpqi_helper.c  optional 	smartpqi
dev/smartpqi/smartpqi_init.c    optional 	smartpqi
dev/smartpqi/smartpqi_intr.c    optional 	smartpqi
dev/smartpqi/smartpqi_ioctl.c   optional 	smartpqi
dev/smartpqi/smartpqi_main.c    optional 	smartpqi
dev/smartpqi/smartpqi_mem.c     optional 	smartpqi
dev/smartpqi/smartpqi_misc.c    optional 	smartpqi
dev/smartpqi/smartpqi_queue.c   optional 	smartpqi
dev/smartpqi/smartpqi_request.c optional 	smartpqi
dev/smartpqi/smartpqi_response.c	optional 	smartpqi
dev/smartpqi/smartpqi_sis.c     optional 	smartpqi
dev/smartpqi/smartpqi_tag.c     optional 	smartpqi
dev/speaker/spkr.c		optional	speaker
dev/superio/superio.c		optional	superio isa
dev/syscons/apm/apm_saver.c	optional	apm_saver apm
dev/syscons/scvesactl.c		optional	sc vga vesa
dev/syscons/scvgarndr.c		optional	sc vga
dev/tpm/tpm.c			optional	tpm
dev/tpm/tpm20.c		optional	tpm
dev/tpm/tpm_crb.c		optional	tpm acpi
dev/tpm/tpm_tis.c		optional	tpm acpi
dev/tpm/tpm_acpi.c		optional	tpm acpi
dev/tpm/tpm_isa.c		optional	tpm isa
dev/uart/uart_cpu_x86.c		optional	uart
dev/viawd/viawd.c		optional	viawd
dev/vmware/vmxnet3/if_vmx.c	optional	vmx
dev/vmware/vmci/vmci.c			optional	vmci
dev/vmware/vmci/vmci_datagram.c		optional	vmci
dev/vmware/vmci/vmci_doorbell.c		optional	vmci
dev/vmware/vmci/vmci_driver.c		optional	vmci
dev/vmware/vmci/vmci_event.c		optional	vmci
dev/vmware/vmci/vmci_hashtable.c	optional	vmci
dev/vmware/vmci/vmci_kernel_if.c	optional	vmci
dev/vmware/vmci/vmci_qpair.c		optional	vmci
dev/vmware/vmci/vmci_queue_pair.c	optional	vmci
dev/vmware/vmci/vmci_resource.c		optional	vmci
dev/vmware/pvscsi/pvscsi.c		optional	pvscsi
dev/vmd/vmd.c			optional	vmd
dev/vmd/vmd_bus.c		optional	vmd_bus
dev/wbwd/wbwd.c			optional	wbwd
dev/xen/pci/xen_acpi_pci.c	optional	xenhvm
dev/xen/pci/xen_pci.c		optional	xenhvm
isa/syscons_isa.c		optional	sc
isa/vga_isa.c			optional	vga
kern/kern_clocksource.c		standard
kern/imgact_aout.c		optional compat_aout
kern/link_elf_obj.c		standard
#
# IA32 binary support
#
#amd64/ia32/ia32_exception.S	optional	compat_freebsd32
amd64/ia32/ia32_reg.c		optional	compat_freebsd32
amd64/ia32/ia32_signal.c	optional	compat_freebsd32
amd64/ia32/ia32_sigtramp.S	optional	compat_freebsd32
amd64/ia32/ia32_syscall.c	optional	compat_freebsd32
amd64/ia32/ia32_misc.c		optional	compat_freebsd32
compat/ia32/ia32_sysvec.c	optional	compat_freebsd32
compat/linprocfs/linprocfs.c	optional	linprocfs
compat/linsysfs/linsysfs.c	optional	linsysfs
#
# Linux/i386 binary support
#
amd64/linux32/linux32_dummy.c	optional	compat_linux32
amd64/linux32/linux32_machdep.c	optional	compat_linux32
amd64/linux32/linux32_support.s	optional	compat_linux32		\
	dependency 	"linux32_assym.h"
amd64/linux32/linux32_sysent.c	optional	compat_linux32
amd64/linux32/linux32_sysvec.c	optional	compat_linux32
compat/linux/linux_emul.c	optional	compat_linux32
compat/linux/linux_errno.c	optional	compat_linux32
compat/linux/linux_file.c	optional	compat_linux32
compat/linux/linux_fork.c	optional	compat_linux32
compat/linux/linux_futex.c	optional	compat_linux32
compat/linux/linux_getcwd.c	optional	compat_linux32
compat/linux/linux_ioctl.c	optional	compat_linux32
compat/linux/linux_ipc.c	optional	compat_linux32
compat/linux/linux_mib.c	optional	compat_linux32
compat/linux/linux_misc.c	optional	compat_linux32
compat/linux/linux_mmap.c	optional	compat_linux32
compat/linux/linux_signal.c	optional	compat_linux32
compat/linux/linux_socket.c	optional	compat_linux32
compat/linux/linux_stats.c	optional	compat_linux32
compat/linux/linux_sysctl.c	optional	compat_linux32
compat/linux/linux_time.c	optional	compat_linux32
compat/linux/linux_timer.c	optional	compat_linux32
compat/linux/linux_uid16.c	optional	compat_linux32
compat/linux/linux_util.c	optional	compat_linux32
compat/linux/linux_vdso.c	optional	compat_linux32
compat/linux/linux_common.c	optional	compat_linux32
compat/linux/linux_event.c	optional	compat_linux32
compat/linux/linux.c		optional	compat_linux32
dev/amr/amr_linux.c		optional	compat_linux32 amr
dev/mfi/mfi_linux.c		optional	compat_linux32 mfi
compat/ndis/winx64_wrap.S	optional	ndisapi pci
#
# x86 real mode BIOS emulator, required by dpms/pci/vesa
#
compat/x86bios/x86bios.c	optional x86bios | dpms | pci | vesa
contrib/x86emu/x86emu.c		optional x86bios | dpms | pci | vesa
#
# bvm console
#
dev/bvm/bvm_console.c		optional	bvmconsole
dev/bvm/bvm_dbg.c		optional	bvmdebug
# Common files where we currently configure the system differently, but perhaps shouldn't
# config(8) doesn't have a way to force standard options, so we've been inconsistent
# about marking non-optional things 'standard'.
x86/acpica/madt.c		optional	acpi
x86/isa/atpic.c			optional	atpic isa
x86/isa/elcr.c			optional	atpic isa | mptable
x86/isa/isa.c			standard
x86/isa/isa_dma.c		standard
x86/pci/pci_early_quirks.c	optional	pci
x86/x86/io_apic.c		standard
x86/x86/local_apic.c		standard
x86/x86/mptable.c		optional	mptable
x86/x86/mptable_pci.c		optional	mptable pci
x86/x86/msi.c			optional	pci
x86/xen/pv.c			optional	xenhvm
x86/xen/pvcpu_enum.c		optional	xenhvm
x86/xen/xen_pci_bus.c		optional	xenhvm
