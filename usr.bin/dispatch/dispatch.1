.\"
.\" Copyright (c) 2022 Edward Tomasz Napierala <en322@cl.cam.ac.uk>
.\" All rights reserved.
.\"
.\" This software was developed by the University of Cambridge Computer
.\" Laboratory as part of the CHERI for Hypervisors and Operating Systems
.\" (CHaOS) project, funded by EPSRC grant EP/V000292/1.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd May 25, 2022
.Dt DISPATCH 1
.Os
.Sh NAME
.Nm dispatch
.Nd substitute default switcher
.Sh SYNOPSIS
.Nm
.Op Fl C
.Op Fl v
.Ar command Op Ar args ...
.Sh DESCRIPTION
The
.Nm
utility constructs an empty address space with the default switcher
replaced with a custom one, then executes the command specified inside
that address space.
The custom switcher is statically compiled into
.Nm ,
and by default uses the exact same assembly source files, thus providing
the same functionality.
.Pp
The primary purpose of
.Nm
is to make it easier to experiment with switcher semantics.
It should provide for a template for custom switcher functionality.
.Pp
Under the hood this uses
.Xr cosetup 2
with COSETUP_TAKEOVER, which makes subsequent calls to
.Xr cosetup 2
in all processes sharing this address space return public code capabilities
provided by
.Nm ,
instead of the ones normally provided by the kernel.
All the remaining aspects of process colocation functionality remain unchanged.
.Pp
Because switcher is trusted to kernel, replacing it requires root privileges.
It can also only be done once per address space.
.Pp
The following options are available:
.Bl -tag -width ".Fl ii"
.It Fl C
Do not call
.Xr cap_enter 2 ;
thus do not enter
.Xr capsicum 4
capability mode.
.Pp
XXX replace with adequately disturbing message
.It Fl v
Be verbose.
.El
.Sh EXIT STATUS
The
.Nm
utility exits 0 on success, and >0 if an error occurs.
.Sh EXAMPLES
To spawn a shell with a new switcher and verify it is really the case:
.Pp
.Dl colookup -s
.Dl dispatch sh
.Dl colookup -s
.Pp
.Sh SEE ALSO
.Xr colookup 1 ,
.Xr cosetup 2
.Sh HISTORY
The
.Nm
command appeared in
.Tn CheriBSD .
.Sh AUTHORS
.An -nosplit
The
.Nm
utility was developed by
.An Edward Tomasz Napierala Aq Mt trasz@FreeBSD.org
at the University of Cambridge Computer Laboratory as part of the CHERI
for Hypervisors and Operating Systems (CHaOS) project, funded by EPSRC
grant EP/V000292/1.
