.\"-
.\" SPDX-License-Identifier: BSD-2-Clause
.\"
.\" Copyright (c) 2021, 2025 SRI International
.\"
.\" This software was developed by SRI International and the University of
.\" Cambridge Computer Laboratory (Department of Computer Science and
.\" Technology) under DARPA contract HR0011-18-C-0016 ("ECATS"), as part of the
.\" DARPA SSITH research programme.
.\"
.\" This software was developed by SRI International, the University of
.\" Cambridge Computer Laboratory (Department of Computer Science and
.\" Technology), and Capabilities Limited under Defense Advanced Research
.\" Projects Agency (DARPA) Contract No. FA8750-24-C-B047 ("DEC").
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd February 13, 2025
.Dt MALLOC_REVOKE 3
.Os
.Sh NAME
.Nm malloc_revoke_enabled ,
.Nm malloc_revoke_quarantine_force_flush ,
.Nm malloc_revoke ,
.Nm malloc_is_revoking
.Nd malloc revocation status and control
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/errno.h
.In stdlib.h
.Ft int
.Fn malloc_revoke_quarantine_force_flush "void"
.Ft void
.Fn malloc_revoke "void"
.In malloc_np.h
.Ft bool
.Fn malloc_revoke_enabled "void"
.Ft bool
.Fn malloc_is_revoking "void"
.Sh DESCRIPTION
On systems which support heap temporal safety through a quarantine and
sweep mechanism (such as CHERI systems), these interfaces permit
control and monitoring of quarantined heap memory.
On other systems, these interfaces are stubs.
.Pp
The
.Fn malloc_revoke_quarantine_force_flush
triggers a full flush of the quarantine and scan of memory to ensure that
all references to memory previously quarantined by
.Xr free 3
or
.Xr realloc 3
are revoked upon successful return.
The deprecated
.Fn malloc_revoke
does the same, but does not return a status value.
.Pp
The
.Fn malloc_revoke_enabled
function and its deprecated form
.Fn malloc_is_revoking
return the state of revocation in the current process.
An array of system wide and implementation-specific knobs control this
state during process startup.
.Sh RETURN VALUES
If the current process has
.Fn malloc
quarantining enabled
.Fn malloc_revoke_enabled
returns
.Dt true
otherwise
.Dt false .
.Pp
.Fn malloc_revoke_quarantine_force_flush
returns
.Dt 0
on success and an error code on failure.
If quarantine is not implemented or is disabled it returns
.Dt ENOTSUP .
.Sh SEE ALSO
.Xr jemalloc 3,
.Xr mrs 3
.Sh AUTHORS
This software and this manual page were
developed by SRI International, the University of Cambridge Computer
Laboratory (Department of Computer Science and Technology), and
Capabilities Limited under contract
.Pq FA8750-24-C-B047
.Pq Do DEC Dc .
.Sh HISTORY
.Fn malloc_revoke_quarantine_force_flush
and
.Fn malloc_revoke_enabled
were introduced in CheriBSD 25.02.
.Pp
.Fn malloc_revoke
was present as a stub in CheriBSD 22.05 where it had no effect.
A working implementation was first added in CheriBSD 23.11.
As of CheriBSD 25.02
.Fn malloc_revoke
and
.Fn malloc_is_revoking
are deprecated.
.Sh BUGS
The
.Fn malloc_revoke
function provides no indication of success or failure even if it is
unimplemented.
