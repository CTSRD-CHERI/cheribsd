.\"-
.\"Â SPDX-License-Identifier: BSD-2-Clause
.\"
.\" Copyright (c) 2021 SRI International
.\"
.\" This software was developed by SRI International and the University of
.\" Cambridge Computer Laboratory (Department of Computer Science and
.\" Technology) under DARPA contract HR0011-18-C-0016 ("ECATS"), as part of the
.\" DARPA SSITH research programme.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd May 14, 2021
.Dt MALLOC_REVOKE 3
.Os
.Sh NAME
.Nm malloc_revoke
.Nd trigger a revocation pass
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In stdlib.h
.Ft void
.Fn malloc_revoke "void"
.Sh DESCRIPTION
On systems supporting revocation,
.Fn
triggers a full revocation pass, returning when the pass is complete.
This results in the revocation of all pointers staged for quarantine.
Depending on their implementation, this may be a subset of pointers
previously passed to
.Xr free 3
or
.Xr realloc 3 .
Individual implementations may provide stronger guarantees (e.g., an
allocator might guarantee that all pointers to objects freed by the
current thread will be revoked).
.Sh SEE ALSO
.Xr free 3 ,
.Xr realloc 3
.Sh AUTHORS
This software and this manual page were
developed by SRI International and the University of Cambridge Computer
Laboratory (Department of Computer Science and Technology) under contract
.Pq HR0011-18-C-0016
.Pq Do ECATS Dc ,
as part of the DARPA SSITH research programme.
