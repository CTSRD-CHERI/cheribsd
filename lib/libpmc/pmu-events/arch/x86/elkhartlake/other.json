[
    {
        "BriefDescription": "Counts the total number of BTCLEARS.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0xe8",
        "EventName": "BTCLEAR.ANY",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the total number of BTCLEARS which occurs when the Branch Target Buffer (BTB) predicts a taken branch.",
        "SampleAfterValue": "200003"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BUS_LOCK.SELF_LOCKS",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EdgeDetect": "1",
        "EventCode": "0x63",
        "EventName": "BUS_LOCK.ALL",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003"
    },
    {
        "BriefDescription": "Counts the number of unhalted cycles a core is blocked due to an accepted lock issued by other cores.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x63",
        "EventName": "BUS_LOCK.BLOCK_CYCLES",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of unhalted cycles a core is blocked due to an accepted lock issued by other cores. Counts on a per core basis.",
        "SampleAfterValue": "200003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BUS_LOCK.BLOCK_CYCLES",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x63",
        "EventName": "BUS_LOCK.CYCLES_OTHER_BLOCK",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BUS_LOCK.LOCK_CYCLES",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x63",
        "EventName": "BUS_LOCK.CYCLES_SELF_BLOCK",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of unhalted cycles a core is blocked due to an accepted lock it issued.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x63",
        "EventName": "BUS_LOCK.LOCK_CYCLES",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of unhalted cycles a core is blocked due to an accepted lock it issued. Counts on a per core basis.",
        "SampleAfterValue": "200003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of bus locks a core issued its self (e.g. lock to UC or Split Lock) and does not include cache locks.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EdgeDetect": "1",
        "EventCode": "0x63",
        "EventName": "BUS_LOCK.SELF_LOCKS",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of bus locks a core issued its self (e.g. lock to UC or Split Lock) and does not include cache locks. Counts on a per core basis.",
        "SampleAfterValue": "200003"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event MEM_BOUND_STALLS.LOAD_DRAM_HIT",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x34",
        "EventName": "C0_STALLS.LOAD_DRAM_HIT",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event MEM_BOUND_STALLS.LOAD_L2_HIT",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x34",
        "EventName": "C0_STALLS.LOAD_L2_HIT",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event MEM_BOUND_STALLS.LOAD_LLC_HIT",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x34",
        "EventName": "C0_STALLS.LOAD_LLC_HIT",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "200003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of core cycles during which interrupts are masked (disabled).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0xcb",
        "EventName": "HW_INTERRUPTS.MASKED",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of core cycles during which interrupts are masked (disabled). Increments by 1 each core cycle that EFLAGS.IF is 0, regardless of whether interrupts are pending or not.",
        "SampleAfterValue": "200003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of core cycles during which there are pending interrupts while interrupts are masked (disabled).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0xcb",
        "EventName": "HW_INTERRUPTS.PENDING_AND_MASKED",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of core cycles during which there are pending interrupts while interrupts are masked (disabled). Increments by 1 each core cycle that both EFLAGS.IF is 0 and an INTR is pending (which means the APIC is telling the ROB to cause an INTR). This event does not increment if EFLAGS.IF is 0 but all interrupt in the APICs Interrupt Request Register (IRR) are inhibited by the PPR (thus either by ISRV or TPR)  because in these cases the interrupts would be held up in the APIC and would not be pended to the ROB. This event does count when an interrupt is only inhibited by MOV/POP SS state machines or the STI state machine. These extra inhibits only last for a single instructions and would not be important.",
        "SampleAfterValue": "200003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the number of hardware interrupts received by the processor.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0xcb",
        "EventName": "HW_INTERRUPTS.RECEIVED",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "203",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts cacheable demand data reads, L1 data cache hardware prefetches and software prefetches (except PREFETCHW) that have any type of response.",
        "Counter": "0,1,2,3",
        "EventCode": "0XB7",
        "EventName": "OCR.DEMAND_DATA_AND_L1PF_RD.ANY_RESPONSE",
        "MSRIndex": "0x1a6,0x1a7",
        "MSRValue": "0x10001",
        "Offcore": "1",
        "PublicDescription": "Offcore response can be programmed only with a specific pair of event select and counter MSR, and with specific event codes and predefine mask bit value in a dedicated MSR to specify attributes of the offcore transaction.",
        "SampleAfterValue": "100003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event OCR.DEMAND_DATA_AND_L1PF_RD.ANY_RESPONSE",
        "Counter": "0,1,2,3",
        "EventCode": "0XB7",
        "EventName": "OCR.DEMAND_DATA_RD.ANY_RESPONSE",
        "MSRIndex": "0x1a6,0x1a7",
        "MSRValue": "0x10001",
        "Offcore": "1",
        "PublicDescription": "Offcore response can be programmed only with a specific pair of event select and counter MSR, and with specific event codes and predefine mask bit value in a dedicated MSR to specify attributes of the offcore transaction.",
        "SampleAfterValue": "100003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts demand reads for ownership (RFO) and software prefetches for exclusive ownership (PREFETCHW) that have any type of response.",
        "Counter": "0,1,2,3",
        "EventCode": "0XB7",
        "EventName": "OCR.DEMAND_RFO.ANY_RESPONSE",
        "MSRIndex": "0x1a6,0x1a7",
        "MSRValue": "0x10002",
        "Offcore": "1",
        "PublicDescription": "Offcore response can be programmed only with a specific pair of event select and counter MSR, and with specific event codes and predefine mask bit value in a dedicated MSR to specify attributes of the offcore transaction.",
        "SampleAfterValue": "100003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a mispredicted jump or a machine clear.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.ALL",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a mispredicted jump or a machine clear. Only issue slots wasted due to fast nukes such as memory ordering nukes are counted. Other nukes are not accounted for. Counts all issue slots blocked during this recovery window including relevant microcode flows and while uops are not yet available in the instruction queue (IQ). Also includes the issue slots that were consumed by the backend but were thrown away because they were younger than the mispredict or machine clear.",
        "SampleAfterValue": "1000003",
        "UMask": "0x6"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to fast nukes such as memory ordering and memory disambiguation machine clears.",
        "Counter": "0,1,2,3",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.FASTNUKE",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a machine clear (nuke) of any kind including memory ordering and memory disambiguation.",
        "Counter": "0,1,2,3",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.MACHINE_CLEARS",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to branch mispredicts.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.MISPREDICT",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event TOPDOWN_BAD_SPECULATION.FASTNUKE",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.MONUKE",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the total number of issue slots every cycle that were not consumed by the backend due to backend stalls.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.ALL",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to certain allocation restrictions.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to memory reservation stalls in which a scheduler is not able to accept uops.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.MEM_SCHEDULER",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to IEC or FPC RAT stalls, which can be due to FIQ or IEC reservation stalls in which the integer, floating point or SIMD scheduler is not able to accept uops.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.NON_MEM_SCHEDULER",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to the physical register file unable to accept an entry (marble stalls).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.REGISTER",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x20"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to the reorder buffer being full (ROB stalls).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.REORDER_BUFFER",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x40"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to scoreboards from the instruction queue (IQ), jump execution unit (JEU), or microcode sequencer (MS).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.SERIALIZATION",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "This event is deprecated.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.STORE_BUFFER",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to frontend stalls.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.ALL",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BACLEARS.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.BRANCH_DETECT",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BACLEARS, which occurs when the Branch Target Buffer (BTB) prediction or lack thereof, was corrected by a later branch predictor in the frontend. Includes BACLEARS due to all branch types including conditional and unconditional jumps, returns, and indirect branches.",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BTCLEARS.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.BRANCH_RESTEER",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BTCLEARS, which occurs when the Branch Target Buffer (BTB) predicts a taken branch.",
        "SampleAfterValue": "1000003",
        "UMask": "0x40"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to the microcode sequencer (MS).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.CISC",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to decode stalls.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.DECODE",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to ITLB misses.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.ITLB",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "PublicDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to Instruction Table Lookaside Buffer (ITLB) misses.",
        "SampleAfterValue": "1000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to other common frontend stalls not categorized.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.OTHER",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x80"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to wrong predecodes.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.PREDECODE",
        "PDIR_COUNTER": "na",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the total number of consumed retirement slots.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3",
        "EventCode": "0xc2",
        "EventName": "TOPDOWN_RETIRING.ALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3",
        "SampleAfterValue": "1000003"
    }
]