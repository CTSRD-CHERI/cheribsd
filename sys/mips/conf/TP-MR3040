#
# TP Link MR3040 - an AR9331 based SoC wifi device.
#
# This is for the 32 RAM/4 flash part. There is little to no
# chance that this will ever boot FreeBSD directly from the 3.5MB
# of flash.  The kernel can fit into the space, but userland is just
# too big even when stripped down to its limits.
#
# * AR9331 SoC
# * 32MB RAM
# * 4MB flash
# * Integrated 1x1 2GHz wifi and 10/100 bridge
# * USB powered
# * USB storage
#

# $FreeBSD$
#

#NO_UNIVERSE

# Include the default AR933x parameters
include	"std.AR933X"

ident	TP-MR3040

# Override hints with board values
hints	"TP-MR3040.hints"

# Board memory - 32MB
options	AR71XX_REALMEM=(32*1024*1024)

# i2c GPIO bus
device	gpioiic
device	iicbb
device	iicbus
device	iic

# Options required for miiproxy and mdiobus
options	ARGE_MDIO	# Export an MDIO bus separate from arge
device	miiproxy	# MDIO bus <-> MII PHY rendezvous

device	etherswitch
device	arswitch

# Enable the uboot environment stuff rather then the
# redboot stuff.
options	AR71XX_ENV_UBOOT

# uzip - to boot read-only lzma natively from flash
device		geom_uzip
options 	GEOM_UZIP
options 	ROOTDEVNAME=\"ufs:/dev/map/rootfs.uzip\"

# Used for the static uboot partition map
device	geom_map

# Boot off of the rootfs, as defined in the geom_map setup.
# Probably, this should be a USB device as the memory available
# compressed rootfs is simply too small for FreeBSD
#options	ROOTDEVNAME=\"ufs:map/rootfs.uncompress\"

# Boot off of a uboot tftp ramdisk kernel image.  Because the flash
# on this unit is so small, this is the only way to do dev work.
# For full deployment, you will *have* to use a usb storage device
# as a rootfs and use the flash to hold the kernel only.
#options		MD_ROOT         # md device usable as a potential root device
#options		MD_ROOT_SIZE=10240
#makeoptions	MFS_IMAGE=/tftpboot/mfsroot-tl-mr3040.img.ulzma
options		ROOTDEVNAME=\"ufs:da0\"
