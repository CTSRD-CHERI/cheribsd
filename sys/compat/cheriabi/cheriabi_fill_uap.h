/*
 * Functions to fill syscall uap structs.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * $FreeBSD$
 */

#ifndef _SYS_COMPAT_CHERIABI_FILL_UAP_H_
#define	_SYS_COMPAT_CHERIABI_FILL_UAP_H_

static inline int
CHERIABI_SYS_cheriabi_syscall_fill_uap(struct thread *td,
    struct cheriabi_syscall_args *uap)
{
	void * __capability tmpcap;

	/* [0] int number */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_syscall_PTRMASK);
	uap->number = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_exit_fill_uap(struct thread *td,
    struct sys_exit_args *uap)
{
	void * __capability tmpcap;

	/* [0] int rval */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_exit_PTRMASK);
	uap->rval = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_read_fill_uap(struct thread *td,
    struct cheriabi_read_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_read_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] size_t nbyte */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_read_PTRMASK);
	uap->nbyte = cheri_getoffset(tmpcap);

	/* [1] void * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_read_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_write_fill_uap(struct thread *td,
    struct cheriabi_write_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_write_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] size_t nbyte */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_write_PTRMASK);
	uap->nbyte = cheri_getoffset(tmpcap);

	/* [1] const void * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_write_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_open_fill_uap(struct thread *td,
    struct cheriabi_open_args *uap)
{
	void * __capability tmpcap;

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_open_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [2] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_open_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_open_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_close_fill_uap(struct thread *td,
    struct close_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_close_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_wait4_fill_uap(struct thread *td,
    struct cheriabi_wait4_args *uap)
{
	void * __capability tmpcap;

	/* [0] int pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_wait4_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [2] int options */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_wait4_PTRMASK);
	uap->options = cheri_getoffset(tmpcap);

	/* [1] int * __capability status */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->status),
	    1, CHERIABI_SYS_cheriabi_wait4_PTRMASK);

	/* [3] struct rusage * __capability rusage */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rusage),
	    3, CHERIABI_SYS_cheriabi_wait4_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_link_fill_uap(struct thread *td,
    struct cheriabi_link_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_link_PTRMASK);

	/* [1] const char * __capability to */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->to),
	    1, CHERIABI_SYS_cheriabi_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_unlink_fill_uap(struct thread *td,
    struct cheriabi_unlink_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_unlink_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_chdir_fill_uap(struct thread *td,
    struct cheriabi_chdir_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_chdir_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_fchdir_fill_uap(struct thread *td,
    struct fchdir_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_fchdir_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_chmod_fill_uap(struct thread *td,
    struct cheriabi_chmod_args *uap)
{
	void * __capability tmpcap;

	/* [1] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_chmod_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_chmod_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_chown_fill_uap(struct thread *td,
    struct cheriabi_chown_args *uap)
{
	void * __capability tmpcap;

	/* [1] int uid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_chown_PTRMASK);
	uap->uid = cheri_getoffset(tmpcap);

	/* [2] int gid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_chown_PTRMASK);
	uap->gid = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_chown_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mount_fill_uap(struct thread *td,
    struct cheriabi_mount_args *uap)
{
	void * __capability tmpcap;

	/* [2] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_mount_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] const char * __capability type */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->type),
	    0, CHERIABI_SYS_cheriabi_mount_PTRMASK);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_mount_PTRMASK);

	/* [3] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    3, CHERIABI_SYS_cheriabi_mount_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_unmount_fill_uap(struct thread *td,
    struct cheriabi_unmount_args *uap)
{
	void * __capability tmpcap;

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_unmount_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_unmount_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_setuid_fill_uap(struct thread *td,
    struct setuid_args *uap)
{
	void * __capability tmpcap;

	/* [0] uid_t uid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setuid_PTRMASK);
	uap->uid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ptrace_fill_uap(struct thread *td,
    struct cheriabi_ptrace_args *uap)
{
	void * __capability tmpcap;

	/* [0] int req */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_ptrace_PTRMASK);
	uap->req = cheri_getoffset(tmpcap);

	/* [1] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_ptrace_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [3] int data */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_ptrace_PTRMASK);
	uap->data = cheri_getoffset(tmpcap);

	/* [2] char * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    2, CHERIABI_SYS_cheriabi_ptrace_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_recvmsg_fill_uap(struct thread *td,
    struct cheriabi_recvmsg_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_recvmsg_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [2] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_recvmsg_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [1] struct msghdr_c * __capability msg */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msg),
	    1, CHERIABI_SYS_cheriabi_recvmsg_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sendmsg_fill_uap(struct thread *td,
    struct cheriabi_sendmsg_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sendmsg_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [2] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_sendmsg_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [1] const struct msghdr_c * __capability msg */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msg),
	    1, CHERIABI_SYS_cheriabi_sendmsg_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_recvfrom_fill_uap(struct thread *td,
    struct cheriabi_recvfrom_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_recvfrom_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [2] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_recvfrom_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [3] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_recvfrom_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [1] void * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_recvfrom_PTRMASK);

	/* [4] struct sockaddr * __capability from */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->from),
	    4, CHERIABI_SYS_cheriabi_recvfrom_PTRMASK);

	/* [5] __socklen_t * __capability fromlenaddr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fromlenaddr),
	    5, CHERIABI_SYS_cheriabi_recvfrom_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_accept_fill_uap(struct thread *td,
    struct cheriabi_accept_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_accept_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [1] struct sockaddr * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    1, CHERIABI_SYS_cheriabi_accept_PTRMASK);

	/* [2] __socklen_t * __capability anamelen */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->anamelen),
	    2, CHERIABI_SYS_cheriabi_accept_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getpeername_fill_uap(struct thread *td,
    struct cheriabi_getpeername_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fdes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_getpeername_PTRMASK);
	uap->fdes = cheri_getoffset(tmpcap);

	/* [1] struct sockaddr * __capability asa */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->asa),
	    1, CHERIABI_SYS_cheriabi_getpeername_PTRMASK);

	/* [2] __socklen_t * __capability alen */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->alen),
	    2, CHERIABI_SYS_cheriabi_getpeername_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getsockname_fill_uap(struct thread *td,
    struct cheriabi_getsockname_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fdes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_getsockname_PTRMASK);
	uap->fdes = cheri_getoffset(tmpcap);

	/* [1] struct sockaddr * __capability asa */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->asa),
	    1, CHERIABI_SYS_cheriabi_getsockname_PTRMASK);

	/* [2] __socklen_t * __capability alen */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->alen),
	    2, CHERIABI_SYS_cheriabi_getsockname_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_access_fill_uap(struct thread *td,
    struct cheriabi_access_args *uap)
{
	void * __capability tmpcap;

	/* [1] int amode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_access_PTRMASK);
	uap->amode = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_access_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_chflags_fill_uap(struct thread *td,
    struct cheriabi_chflags_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_long flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_chflags_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_chflags_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_fchflags_fill_uap(struct thread *td,
    struct fchflags_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_fchflags_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] u_long flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_fchflags_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_kill_fill_uap(struct thread *td,
    struct kill_args *uap)
{
	void * __capability tmpcap;

	/* [0] int pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_kill_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] int signum */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_kill_PTRMASK);
	uap->signum = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_dup_fill_uap(struct thread *td,
    struct dup_args *uap)
{
	void * __capability tmpcap;

	/* [0] u_int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_dup_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_profil_fill_uap(struct thread *td,
    struct cheriabi_profil_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t size */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_profil_PTRMASK);
	uap->size = cheri_getoffset(tmpcap);

	/* [2] size_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_profil_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [3] u_int scale */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_profil_PTRMASK);
	uap->scale = cheri_getoffset(tmpcap);

	/* [0] void * __capability samples */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->samples),
	    0, CHERIABI_SYS_cheriabi_profil_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ktrace_fill_uap(struct thread *td,
    struct cheriabi_ktrace_args *uap)
{
	void * __capability tmpcap;

	/* [1] int ops */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_ktrace_PTRMASK);
	uap->ops = cheri_getoffset(tmpcap);

	/* [2] int facs */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_ktrace_PTRMASK);
	uap->facs = cheri_getoffset(tmpcap);

	/* [3] int pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_ktrace_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [0] const char * __capability fname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fname),
	    0, CHERIABI_SYS_cheriabi_ktrace_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getlogin_fill_uap(struct thread *td,
    struct cheriabi_getlogin_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_int namelen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_getlogin_PTRMASK);
	uap->namelen = cheri_getoffset(tmpcap);

	/* [0] char * __capability namebuf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->namebuf),
	    0, CHERIABI_SYS_cheriabi_getlogin_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setlogin_fill_uap(struct thread *td,
    struct cheriabi_setlogin_args *uap)
{

	/* [0] const char * __capability namebuf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->namebuf),
	    0, CHERIABI_SYS_cheriabi_setlogin_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_acct_fill_uap(struct thread *td,
    struct cheriabi_acct_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_acct_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigaltstack_fill_uap(struct thread *td,
    struct cheriabi_sigaltstack_args *uap)
{

	/* [0] const cheriabi_stack_t * __capability ss */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ss),
	    0, CHERIABI_SYS_cheriabi_sigaltstack_PTRMASK);

	/* [1] cheriabi_stack_t * __capability oss */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->oss),
	    1, CHERIABI_SYS_cheriabi_sigaltstack_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ioctl_fill_uap(struct thread *td,
    struct cheriabi_ioctl_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_ioctl_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] u_long com */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_ioctl_PTRMASK);
	uap->com = cheri_getoffset(tmpcap);

	/* [2] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    2, CHERIABI_SYS_cheriabi_ioctl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_reboot_fill_uap(struct thread *td,
    struct reboot_args *uap)
{
	void * __capability tmpcap;

	/* [0] int opt */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_reboot_PTRMASK);
	uap->opt = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_revoke_fill_uap(struct thread *td,
    struct cheriabi_revoke_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_revoke_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_symlink_fill_uap(struct thread *td,
    struct cheriabi_symlink_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_symlink_PTRMASK);

	/* [1] const char * __capability link */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->link),
	    1, CHERIABI_SYS_cheriabi_symlink_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_readlink_fill_uap(struct thread *td,
    struct cheriabi_readlink_args *uap)
{
	void * __capability tmpcap;

	/* [2] size_t count */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_readlink_PTRMASK);
	uap->count = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_readlink_PTRMASK);

	/* [1] char * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_readlink_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_execve_fill_uap(struct thread *td,
    struct cheriabi_execve_args *uap)
{

	/* [0] const char * __capability fname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fname),
	    0, CHERIABI_SYS_cheriabi_execve_PTRMASK);

	/* [1] void * __capability * __capability argv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->argv),
	    1, CHERIABI_SYS_cheriabi_execve_PTRMASK);

	/* [2] void * __capability * __capability envv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->envv),
	    2, CHERIABI_SYS_cheriabi_execve_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_umask_fill_uap(struct thread *td,
    struct umask_args *uap)
{
	void * __capability tmpcap;

	/* [0] mode_t newmask */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_umask_PTRMASK);
	uap->newmask = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_chroot_fill_uap(struct thread *td,
    struct cheriabi_chroot_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_chroot_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_msync_fill_uap(struct thread *td,
    struct cheriabi_msync_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_msync_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [2] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_msync_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_msync_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_munmap_fill_uap(struct thread *td,
    struct cheriabi_munmap_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_munmap_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [0] void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_munmap_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mprotect_fill_uap(struct thread *td,
    struct cheriabi_mprotect_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_mprotect_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [2] int prot */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_mprotect_PTRMASK);
	uap->prot = cheri_getoffset(tmpcap);

	/* [0] const void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_mprotect_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_madvise_fill_uap(struct thread *td,
    struct cheriabi_madvise_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_madvise_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [2] int behav */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_madvise_PTRMASK);
	uap->behav = cheri_getoffset(tmpcap);

	/* [0] void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_madvise_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mincore_fill_uap(struct thread *td,
    struct cheriabi_mincore_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_mincore_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [0] const void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_mincore_PTRMASK);

	/* [2] char * __capability vec */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->vec),
	    2, CHERIABI_SYS_cheriabi_mincore_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getgroups_fill_uap(struct thread *td,
    struct cheriabi_getgroups_args *uap)
{
	void * __capability tmpcap;

	/* [0] u_int gidsetsize */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_getgroups_PTRMASK);
	uap->gidsetsize = cheri_getoffset(tmpcap);

	/* [1] gid_t * __capability gidset */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->gidset),
	    1, CHERIABI_SYS_cheriabi_getgroups_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setgroups_fill_uap(struct thread *td,
    struct cheriabi_setgroups_args *uap)
{
	void * __capability tmpcap;

	/* [0] u_int gidsetsize */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_setgroups_PTRMASK);
	uap->gidsetsize = cheri_getoffset(tmpcap);

	/* [1] const gid_t * __capability gidset */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->gidset),
	    1, CHERIABI_SYS_cheriabi_setgroups_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_setpgid_fill_uap(struct thread *td,
    struct setpgid_args *uap)
{
	void * __capability tmpcap;

	/* [0] int pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setpgid_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] int pgid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_setpgid_PTRMASK);
	uap->pgid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setitimer_fill_uap(struct thread *td,
    struct cheriabi_setitimer_args *uap)
{
	void * __capability tmpcap;

	/* [0] int which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_setitimer_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [1] const struct itimerval * __capability itv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->itv),
	    1, CHERIABI_SYS_cheriabi_setitimer_PTRMASK);

	/* [2] struct itimerval * __capability oitv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->oitv),
	    2, CHERIABI_SYS_cheriabi_setitimer_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_swapon_fill_uap(struct thread *td,
    struct cheriabi_swapon_args *uap)
{

	/* [0] const char * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    0, CHERIABI_SYS_cheriabi_swapon_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getitimer_fill_uap(struct thread *td,
    struct cheriabi_getitimer_args *uap)
{
	void * __capability tmpcap;

	/* [0] int which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_getitimer_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [1] struct itimerval * __capability itv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->itv),
	    1, CHERIABI_SYS_cheriabi_getitimer_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_dup2_fill_uap(struct thread *td,
    struct dup2_args *uap)
{
	void * __capability tmpcap;

	/* [0] u_int from */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_dup2_PTRMASK);
	uap->from = cheri_getoffset(tmpcap);

	/* [1] u_int to */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_dup2_PTRMASK);
	uap->to = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fcntl_fill_uap(struct thread *td,
    struct cheriabi_fcntl_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_fcntl_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int cmd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_fcntl_PTRMASK);
	uap->cmd = cheri_getoffset(tmpcap);

	/* [2] intcap_t arg */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->arg),
	    2, CHERIABI_SYS_cheriabi_fcntl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_select_fill_uap(struct thread *td,
    struct cheriabi_select_args *uap)
{
	void * __capability tmpcap;

	/* [0] int nd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_select_PTRMASK);
	uap->nd = cheri_getoffset(tmpcap);

	/* [1] fd_set * __capability in */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->in),
	    1, CHERIABI_SYS_cheriabi_select_PTRMASK);

	/* [2] fd_set * __capability ou */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ou),
	    2, CHERIABI_SYS_cheriabi_select_PTRMASK);

	/* [3] fd_set * __capability ex */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ex),
	    3, CHERIABI_SYS_cheriabi_select_PTRMASK);

	/* [4] struct timeval * __capability tv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tv),
	    4, CHERIABI_SYS_cheriabi_select_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_fsync_fill_uap(struct thread *td,
    struct fsync_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_fsync_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_setpriority_fill_uap(struct thread *td,
    struct setpriority_args *uap)
{
	void * __capability tmpcap;

	/* [0] int which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setpriority_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [1] int who */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_setpriority_PTRMASK);
	uap->who = cheri_getoffset(tmpcap);

	/* [2] int prio */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_setpriority_PTRMASK);
	uap->prio = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_socket_fill_uap(struct thread *td,
    struct socket_args *uap)
{
	void * __capability tmpcap;

	/* [0] int domain */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_socket_PTRMASK);
	uap->domain = cheri_getoffset(tmpcap);

	/* [1] int type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_socket_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [2] int protocol */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_socket_PTRMASK);
	uap->protocol = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_connect_fill_uap(struct thread *td,
    struct cheriabi_connect_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_connect_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [2] __socklen_t namelen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_connect_PTRMASK);
	uap->namelen = cheri_getoffset(tmpcap);

	/* [1] const struct sockaddr * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    1, CHERIABI_SYS_cheriabi_connect_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_getpriority_fill_uap(struct thread *td,
    struct getpriority_args *uap)
{
	void * __capability tmpcap;

	/* [0] int which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_getpriority_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [1] int who */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_getpriority_PTRMASK);
	uap->who = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_bind_fill_uap(struct thread *td,
    struct cheriabi_bind_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_bind_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [2] __socklen_t namelen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_bind_PTRMASK);
	uap->namelen = cheri_getoffset(tmpcap);

	/* [1] const struct sockaddr * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    1, CHERIABI_SYS_cheriabi_bind_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setsockopt_fill_uap(struct thread *td,
    struct cheriabi_setsockopt_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_setsockopt_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [1] int level */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_setsockopt_PTRMASK);
	uap->level = cheri_getoffset(tmpcap);

	/* [2] int name */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_setsockopt_PTRMASK);
	uap->name = cheri_getoffset(tmpcap);

	/* [4] __socklen_t valsize */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_setsockopt_PTRMASK);
	uap->valsize = cheri_getoffset(tmpcap);

	/* [3] const void * __capability val */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->val),
	    3, CHERIABI_SYS_cheriabi_setsockopt_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_listen_fill_uap(struct thread *td,
    struct listen_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_listen_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [1] int backlog */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_listen_PTRMASK);
	uap->backlog = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_gettimeofday_fill_uap(struct thread *td,
    struct cheriabi_gettimeofday_args *uap)
{

	/* [0] struct timeval * __capability tp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tp),
	    0, CHERIABI_SYS_cheriabi_gettimeofday_PTRMASK);

	/* [1] struct timezone * __capability tzp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tzp),
	    1, CHERIABI_SYS_cheriabi_gettimeofday_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getrusage_fill_uap(struct thread *td,
    struct cheriabi_getrusage_args *uap)
{
	void * __capability tmpcap;

	/* [0] int who */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_getrusage_PTRMASK);
	uap->who = cheri_getoffset(tmpcap);

	/* [1] struct rusage * __capability rusage */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rusage),
	    1, CHERIABI_SYS_cheriabi_getrusage_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getsockopt_fill_uap(struct thread *td,
    struct cheriabi_getsockopt_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_getsockopt_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [1] int level */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_getsockopt_PTRMASK);
	uap->level = cheri_getoffset(tmpcap);

	/* [2] int name */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_getsockopt_PTRMASK);
	uap->name = cheri_getoffset(tmpcap);

	/* [3] void * __capability val */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->val),
	    3, CHERIABI_SYS_cheriabi_getsockopt_PTRMASK);

	/* [4] __socklen_t * __capability avalsize */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->avalsize),
	    4, CHERIABI_SYS_cheriabi_getsockopt_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_readv_fill_uap(struct thread *td,
    struct cheriabi_readv_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_readv_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] u_int iovcnt */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_readv_PTRMASK);
	uap->iovcnt = cheri_getoffset(tmpcap);

	/* [1] struct iovec_c * __capability iovp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iovp),
	    1, CHERIABI_SYS_cheriabi_readv_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_writev_fill_uap(struct thread *td,
    struct cheriabi_writev_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_writev_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] u_int iovcnt */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_writev_PTRMASK);
	uap->iovcnt = cheri_getoffset(tmpcap);

	/* [1] struct iovec_c * __capability iovp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iovp),
	    1, CHERIABI_SYS_cheriabi_writev_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_settimeofday_fill_uap(struct thread *td,
    struct cheriabi_settimeofday_args *uap)
{

	/* [0] const struct timeval * __capability tv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tv),
	    0, CHERIABI_SYS_cheriabi_settimeofday_PTRMASK);

	/* [1] const struct timezone * __capability tzp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tzp),
	    1, CHERIABI_SYS_cheriabi_settimeofday_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_fchown_fill_uap(struct thread *td,
    struct fchown_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_fchown_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int uid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_fchown_PTRMASK);
	uap->uid = cheri_getoffset(tmpcap);

	/* [2] int gid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_fchown_PTRMASK);
	uap->gid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_fchmod_fill_uap(struct thread *td,
    struct fchmod_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_fchmod_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_fchmod_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_setreuid_fill_uap(struct thread *td,
    struct setreuid_args *uap)
{
	void * __capability tmpcap;

	/* [0] int ruid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setreuid_PTRMASK);
	uap->ruid = cheri_getoffset(tmpcap);

	/* [1] int euid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_setreuid_PTRMASK);
	uap->euid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_setregid_fill_uap(struct thread *td,
    struct setregid_args *uap)
{
	void * __capability tmpcap;

	/* [0] int rgid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setregid_PTRMASK);
	uap->rgid = cheri_getoffset(tmpcap);

	/* [1] int egid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_setregid_PTRMASK);
	uap->egid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rename_fill_uap(struct thread *td,
    struct cheriabi_rename_args *uap)
{

	/* [0] const char * __capability from */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->from),
	    0, CHERIABI_SYS_cheriabi_rename_PTRMASK);

	/* [1] const char * __capability to */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->to),
	    1, CHERIABI_SYS_cheriabi_rename_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_flock_fill_uap(struct thread *td,
    struct flock_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_flock_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int how */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_flock_PTRMASK);
	uap->how = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mkfifo_fill_uap(struct thread *td,
    struct cheriabi_mkfifo_args *uap)
{
	void * __capability tmpcap;

	/* [1] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_mkfifo_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_mkfifo_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sendto_fill_uap(struct thread *td,
    struct cheriabi_sendto_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sendto_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [2] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_sendto_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [3] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_sendto_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [5] __socklen_t tolen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 5, CHERIABI_SYS_cheriabi_sendto_PTRMASK);
	uap->tolen = cheri_getoffset(tmpcap);

	/* [1] const void * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_sendto_PTRMASK);

	/* [4] const struct sockaddr * __capability to */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->to),
	    4, CHERIABI_SYS_cheriabi_sendto_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_shutdown_fill_uap(struct thread *td,
    struct shutdown_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_shutdown_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [1] int how */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_shutdown_PTRMASK);
	uap->how = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_socketpair_fill_uap(struct thread *td,
    struct cheriabi_socketpair_args *uap)
{
	void * __capability tmpcap;

	/* [0] int domain */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_socketpair_PTRMASK);
	uap->domain = cheri_getoffset(tmpcap);

	/* [1] int type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_socketpair_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [2] int protocol */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_socketpair_PTRMASK);
	uap->protocol = cheri_getoffset(tmpcap);

	/* [3] int * __capability rsv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rsv),
	    3, CHERIABI_SYS_cheriabi_socketpair_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mkdir_fill_uap(struct thread *td,
    struct cheriabi_mkdir_args *uap)
{
	void * __capability tmpcap;

	/* [1] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_mkdir_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_mkdir_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rmdir_fill_uap(struct thread *td,
    struct cheriabi_rmdir_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_rmdir_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_utimes_fill_uap(struct thread *td,
    struct cheriabi_utimes_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_utimes_PTRMASK);

	/* [1] const struct timeval * __capability tptr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tptr),
	    1, CHERIABI_SYS_cheriabi_utimes_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_adjtime_fill_uap(struct thread *td,
    struct cheriabi_adjtime_args *uap)
{

	/* [0] const struct timeval * __capability delta */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->delta),
	    0, CHERIABI_SYS_cheriabi_adjtime_PTRMASK);

	/* [1] struct timeval * __capability olddelta */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->olddelta),
	    1, CHERIABI_SYS_cheriabi_adjtime_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_quotactl_fill_uap(struct thread *td,
    struct cheriabi_quotactl_args *uap)
{
	void * __capability tmpcap;

	/* [1] int cmd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_quotactl_PTRMASK);
	uap->cmd = cheri_getoffset(tmpcap);

	/* [2] int uid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_quotactl_PTRMASK);
	uap->uid = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_quotactl_PTRMASK);

	/* [3] void * __capability arg */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->arg),
	    3, CHERIABI_SYS_cheriabi_quotactl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_nlm_syscall_fill_uap(struct thread *td,
    struct cheriabi_nlm_syscall_args *uap)
{
	void * __capability tmpcap;

	/* [0] int debug_level */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_nlm_syscall_PTRMASK);
	uap->debug_level = cheri_getoffset(tmpcap);

	/* [1] int grace_period */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_nlm_syscall_PTRMASK);
	uap->grace_period = cheri_getoffset(tmpcap);

	/* [2] int addr_count */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_nlm_syscall_PTRMASK);
	uap->addr_count = cheri_getoffset(tmpcap);

	/* [3] void * __capability * __capability addrs */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addrs),
	    3, CHERIABI_SYS_cheriabi_nlm_syscall_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_nfssvc_fill_uap(struct thread *td,
    struct cheriabi_nfssvc_args *uap)
{
	void * __capability tmpcap;

	/* [0] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_nfssvc_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [1] void * __capability argp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->argp),
	    1, CHERIABI_SYS_cheriabi_nfssvc_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_lgetfh_fill_uap(struct thread *td,
    struct cheriabi_lgetfh_args *uap)
{

	/* [0] const char * __capability fname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fname),
	    0, CHERIABI_SYS_cheriabi_lgetfh_PTRMASK);

	/* [1] struct fhandle * __capability fhp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fhp),
	    1, CHERIABI_SYS_cheriabi_lgetfh_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getfh_fill_uap(struct thread *td,
    struct cheriabi_getfh_args *uap)
{

	/* [0] const char * __capability fname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fname),
	    0, CHERIABI_SYS_cheriabi_getfh_PTRMASK);

	/* [1] struct fhandle * __capability fhp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fhp),
	    1, CHERIABI_SYS_cheriabi_getfh_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sysarch_fill_uap(struct thread *td,
    struct cheriabi_sysarch_args *uap)
{
	void * __capability tmpcap;

	/* [0] int op */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sysarch_PTRMASK);
	uap->op = cheri_getoffset(tmpcap);

	/* [1] char * __capability parms */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->parms),
	    1, CHERIABI_SYS_cheriabi_sysarch_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rtprio_fill_uap(struct thread *td,
    struct cheriabi_rtprio_args *uap)
{
	void * __capability tmpcap;

	/* [0] int function */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_rtprio_PTRMASK);
	uap->function = cheri_getoffset(tmpcap);

	/* [1] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_rtprio_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [2] struct rtprio * __capability rtp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rtp),
	    2, CHERIABI_SYS_cheriabi_rtprio_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_setfib_fill_uap(struct thread *td,
    struct setfib_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fibnum */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setfib_PTRMASK);
	uap->fibnum = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ntp_adjtime_fill_uap(struct thread *td,
    struct cheriabi_ntp_adjtime_args *uap)
{

	/* [0] struct timex * __capability tp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tp),
	    0, CHERIABI_SYS_cheriabi_ntp_adjtime_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_setgid_fill_uap(struct thread *td,
    struct setgid_args *uap)
{
	void * __capability tmpcap;

	/* [0] gid_t gid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setgid_PTRMASK);
	uap->gid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_setegid_fill_uap(struct thread *td,
    struct setegid_args *uap)
{
	void * __capability tmpcap;

	/* [0] gid_t egid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setegid_PTRMASK);
	uap->egid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_seteuid_fill_uap(struct thread *td,
    struct seteuid_args *uap)
{
	void * __capability tmpcap;

	/* [0] uid_t euid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_seteuid_PTRMASK);
	uap->euid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_pathconf_fill_uap(struct thread *td,
    struct cheriabi_pathconf_args *uap)
{
	void * __capability tmpcap;

	/* [1] int name */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_pathconf_PTRMASK);
	uap->name = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_pathconf_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_fpathconf_fill_uap(struct thread *td,
    struct fpathconf_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_fpathconf_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int name */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_fpathconf_PTRMASK);
	uap->name = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getrlimit_fill_uap(struct thread *td,
    struct cheriabi_getrlimit_args *uap)
{
	void * __capability tmpcap;

	/* [0] u_int which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_getrlimit_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [1] struct rlimit * __capability rlp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rlp),
	    1, CHERIABI_SYS_cheriabi_getrlimit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setrlimit_fill_uap(struct thread *td,
    struct cheriabi_setrlimit_args *uap)
{
	void * __capability tmpcap;

	/* [0] u_int which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_setrlimit_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [1] struct rlimit * __capability rlp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rlp),
	    1, CHERIABI_SYS_cheriabi_setrlimit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___sysctl_fill_uap(struct thread *td,
    struct cheriabi___sysctl_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_int namelen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___sysctl_PTRMASK);
	uap->namelen = cheri_getoffset(tmpcap);

	/* [5] size_t newlen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 5, CHERIABI_SYS_cheriabi___sysctl_PTRMASK);
	uap->newlen = cheri_getoffset(tmpcap);

	/* [0] int * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    0, CHERIABI_SYS_cheriabi___sysctl_PTRMASK);

	/* [2] void * __capability old */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->old),
	    2, CHERIABI_SYS_cheriabi___sysctl_PTRMASK);

	/* [3] size_t * __capability oldlenp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->oldlenp),
	    3, CHERIABI_SYS_cheriabi___sysctl_PTRMASK);

	/* [4] void * __capability new */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->new),
	    4, CHERIABI_SYS_cheriabi___sysctl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mlock_fill_uap(struct thread *td,
    struct cheriabi_mlock_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_mlock_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [0] const void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_mlock_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_munlock_fill_uap(struct thread *td,
    struct cheriabi_munlock_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_munlock_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [0] const void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_munlock_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_undelete_fill_uap(struct thread *td,
    struct cheriabi_undelete_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_undelete_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_futimes_fill_uap(struct thread *td,
    struct cheriabi_futimes_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_futimes_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] const struct timeval * __capability tptr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tptr),
	    1, CHERIABI_SYS_cheriabi_futimes_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_getpgid_fill_uap(struct thread *td,
    struct getpgid_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_getpgid_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_poll_fill_uap(struct thread *td,
    struct cheriabi_poll_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_int nfds */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_poll_PTRMASK);
	uap->nfds = cheri_getoffset(tmpcap);

	/* [2] int timeout */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_poll_PTRMASK);
	uap->timeout = cheri_getoffset(tmpcap);

	/* [0] struct pollfd * __capability fds */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fds),
	    0, CHERIABI_SYS_cheriabi_poll_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_semget_fill_uap(struct thread *td,
    struct semget_args *uap)
{
	void * __capability tmpcap;

	/* [0] key_t key */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_semget_PTRMASK);
	uap->key = cheri_getoffset(tmpcap);

	/* [1] int nsems */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_semget_PTRMASK);
	uap->nsems = cheri_getoffset(tmpcap);

	/* [2] int semflg */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_semget_PTRMASK);
	uap->semflg = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_semop_fill_uap(struct thread *td,
    struct cheriabi_semop_args *uap)
{
	void * __capability tmpcap;

	/* [0] int semid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_semop_PTRMASK);
	uap->semid = cheri_getoffset(tmpcap);

	/* [2] u_int nsops */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_semop_PTRMASK);
	uap->nsops = cheri_getoffset(tmpcap);

	/* [1] struct sembuf * __capability sops */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sops),
	    1, CHERIABI_SYS_cheriabi_semop_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_msgget_fill_uap(struct thread *td,
    struct msgget_args *uap)
{
	void * __capability tmpcap;

	/* [0] key_t key */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_msgget_PTRMASK);
	uap->key = cheri_getoffset(tmpcap);

	/* [1] int msgflg */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_msgget_PTRMASK);
	uap->msgflg = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_msgsnd_fill_uap(struct thread *td,
    struct cheriabi_msgsnd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int msqid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_msgsnd_PTRMASK);
	uap->msqid = cheri_getoffset(tmpcap);

	/* [2] size_t msgsz */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_msgsnd_PTRMASK);
	uap->msgsz = cheri_getoffset(tmpcap);

	/* [3] int msgflg */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_msgsnd_PTRMASK);
	uap->msgflg = cheri_getoffset(tmpcap);

	/* [1] void * __capability msgp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msgp),
	    1, CHERIABI_SYS_cheriabi_msgsnd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_msgrcv_fill_uap(struct thread *td,
    struct cheriabi_msgrcv_args *uap)
{
	void * __capability tmpcap;

	/* [0] int msqid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_msgrcv_PTRMASK);
	uap->msqid = cheri_getoffset(tmpcap);

	/* [2] size_t msgsz */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_msgrcv_PTRMASK);
	uap->msgsz = cheri_getoffset(tmpcap);

	/* [3] long msgtyp */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_msgrcv_PTRMASK);
	uap->msgtyp = cheri_getoffset(tmpcap);

	/* [4] int msgflg */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_msgrcv_PTRMASK);
	uap->msgflg = cheri_getoffset(tmpcap);

	/* [1] void * __capability msgp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msgp),
	    1, CHERIABI_SYS_cheriabi_msgrcv_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_shmat_fill_uap(struct thread *td,
    struct cheriabi_shmat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int shmid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_shmat_PTRMASK);
	uap->shmid = cheri_getoffset(tmpcap);

	/* [2] int shmflg */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_shmat_PTRMASK);
	uap->shmflg = cheri_getoffset(tmpcap);

	/* [1] void * __capability shmaddr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->shmaddr),
	    1, CHERIABI_SYS_cheriabi_shmat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_shmdt_fill_uap(struct thread *td,
    struct cheriabi_shmdt_args *uap)
{

	/* [0] void * __capability shmaddr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->shmaddr),
	    0, CHERIABI_SYS_cheriabi_shmdt_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_shmget_fill_uap(struct thread *td,
    struct shmget_args *uap)
{
	void * __capability tmpcap;

	/* [0] key_t key */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_shmget_PTRMASK);
	uap->key = cheri_getoffset(tmpcap);

	/* [1] int size */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_shmget_PTRMASK);
	uap->size = cheri_getoffset(tmpcap);

	/* [2] int shmflg */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_shmget_PTRMASK);
	uap->shmflg = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_clock_gettime_fill_uap(struct thread *td,
    struct cheriabi_clock_gettime_args *uap)
{
	void * __capability tmpcap;

	/* [0] clockid_t clock_id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_clock_gettime_PTRMASK);
	uap->clock_id = cheri_getoffset(tmpcap);

	/* [1] struct timespec * __capability tp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tp),
	    1, CHERIABI_SYS_cheriabi_clock_gettime_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_clock_settime_fill_uap(struct thread *td,
    struct cheriabi_clock_settime_args *uap)
{
	void * __capability tmpcap;

	/* [0] clockid_t clock_id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_clock_settime_PTRMASK);
	uap->clock_id = cheri_getoffset(tmpcap);

	/* [1] const struct timespec * __capability tp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tp),
	    1, CHERIABI_SYS_cheriabi_clock_settime_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_clock_getres_fill_uap(struct thread *td,
    struct cheriabi_clock_getres_args *uap)
{
	void * __capability tmpcap;

	/* [0] clockid_t clock_id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_clock_getres_PTRMASK);
	uap->clock_id = cheri_getoffset(tmpcap);

	/* [1] struct timespec * __capability tp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tp),
	    1, CHERIABI_SYS_cheriabi_clock_getres_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ktimer_create_fill_uap(struct thread *td,
    struct cheriabi_ktimer_create_args *uap)
{
	void * __capability tmpcap;

	/* [0] clockid_t clock_id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_ktimer_create_PTRMASK);
	uap->clock_id = cheri_getoffset(tmpcap);

	/* [1] struct sigevent_c * __capability evp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->evp),
	    1, CHERIABI_SYS_cheriabi_ktimer_create_PTRMASK);

	/* [2] int * __capability timerid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->timerid),
	    2, CHERIABI_SYS_cheriabi_ktimer_create_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_ktimer_delete_fill_uap(struct thread *td,
    struct ktimer_delete_args *uap)
{
	void * __capability tmpcap;

	/* [0] int timerid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_ktimer_delete_PTRMASK);
	uap->timerid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ktimer_settime_fill_uap(struct thread *td,
    struct cheriabi_ktimer_settime_args *uap)
{
	void * __capability tmpcap;

	/* [0] int timerid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_ktimer_settime_PTRMASK);
	uap->timerid = cheri_getoffset(tmpcap);

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_ktimer_settime_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [2] const struct itimerspec * __capability value */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->value),
	    2, CHERIABI_SYS_cheriabi_ktimer_settime_PTRMASK);

	/* [3] struct itimerspec * __capability ovalue */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ovalue),
	    3, CHERIABI_SYS_cheriabi_ktimer_settime_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ktimer_gettime_fill_uap(struct thread *td,
    struct cheriabi_ktimer_gettime_args *uap)
{
	void * __capability tmpcap;

	/* [0] int timerid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_ktimer_gettime_PTRMASK);
	uap->timerid = cheri_getoffset(tmpcap);

	/* [1] struct itimerspec * __capability value */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->value),
	    1, CHERIABI_SYS_cheriabi_ktimer_gettime_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_ktimer_getoverrun_fill_uap(struct thread *td,
    struct ktimer_getoverrun_args *uap)
{
	void * __capability tmpcap;

	/* [0] int timerid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_ktimer_getoverrun_PTRMASK);
	uap->timerid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_nanosleep_fill_uap(struct thread *td,
    struct cheriabi_nanosleep_args *uap)
{

	/* [0] const struct timespec * __capability rqtp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rqtp),
	    0, CHERIABI_SYS_cheriabi_nanosleep_PTRMASK);

	/* [1] struct timespec * __capability rmtp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rmtp),
	    1, CHERIABI_SYS_cheriabi_nanosleep_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ffclock_getcounter_fill_uap(struct thread *td,
    struct cheriabi_ffclock_getcounter_args *uap)
{

	/* [0] ffcounter * __capability ffcount */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ffcount),
	    0, CHERIABI_SYS_cheriabi_ffclock_getcounter_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ffclock_setestimate_fill_uap(struct thread *td,
    struct cheriabi_ffclock_setestimate_args *uap)
{

	/* [0] struct ffclock_estimate * __capability cest */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->cest),
	    0, CHERIABI_SYS_cheriabi_ffclock_setestimate_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ffclock_getestimate_fill_uap(struct thread *td,
    struct cheriabi_ffclock_getestimate_args *uap)
{

	/* [0] struct ffclock_estimate * __capability cest */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->cest),
	    0, CHERIABI_SYS_cheriabi_ffclock_getestimate_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_clock_nanosleep_fill_uap(struct thread *td,
    struct cheriabi_clock_nanosleep_args *uap)
{
	void * __capability tmpcap;

	/* [0] clockid_t clock_id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_clock_nanosleep_PTRMASK);
	uap->clock_id = cheri_getoffset(tmpcap);

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_clock_nanosleep_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [2] const struct timespec * __capability rqtp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rqtp),
	    2, CHERIABI_SYS_cheriabi_clock_nanosleep_PTRMASK);

	/* [3] struct timespec * __capability rmtp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rmtp),
	    3, CHERIABI_SYS_cheriabi_clock_nanosleep_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_clock_getcpuclockid2_fill_uap(struct thread *td,
    struct cheriabi_clock_getcpuclockid2_args *uap)
{
	void * __capability tmpcap;

	/* [0] id_t id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_clock_getcpuclockid2_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [1] int which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_clock_getcpuclockid2_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [2] clockid_t * __capability clock_id */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->clock_id),
	    2, CHERIABI_SYS_cheriabi_clock_getcpuclockid2_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ntp_gettime_fill_uap(struct thread *td,
    struct cheriabi_ntp_gettime_args *uap)
{

	/* [0] struct ntptimeval * __capability ntvp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ntvp),
	    0, CHERIABI_SYS_cheriabi_ntp_gettime_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_minherit_fill_uap(struct thread *td,
    struct cheriabi_minherit_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_minherit_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [2] int inherit */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_minherit_PTRMASK);
	uap->inherit = cheri_getoffset(tmpcap);

	/* [0] void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_minherit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_rfork_fill_uap(struct thread *td,
    struct rfork_args *uap)
{
	void * __capability tmpcap;

	/* [0] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_rfork_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_lchown_fill_uap(struct thread *td,
    struct cheriabi_lchown_args *uap)
{
	void * __capability tmpcap;

	/* [1] int uid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_lchown_PTRMASK);
	uap->uid = cheri_getoffset(tmpcap);

	/* [2] int gid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_lchown_PTRMASK);
	uap->gid = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_lchown_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_read_fill_uap(struct thread *td,
    struct cheriabi_aio_read_args *uap)
{

	/* [0] struct aiocb_c * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    0, CHERIABI_SYS_cheriabi_aio_read_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_write_fill_uap(struct thread *td,
    struct cheriabi_aio_write_args *uap)
{

	/* [0] struct aiocb_c * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    0, CHERIABI_SYS_cheriabi_aio_write_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_lio_listio_fill_uap(struct thread *td,
    struct cheriabi_lio_listio_args *uap)
{
	void * __capability tmpcap;

	/* [0] int mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_lio_listio_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [2] int nent */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_lio_listio_PTRMASK);
	uap->nent = cheri_getoffset(tmpcap);

	/* [1] struct aiocb_c * __capability const * __capability acb_list */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->acb_list),
	    1, CHERIABI_SYS_cheriabi_lio_listio_PTRMASK);

	/* [3] struct sigevent_c * __capability sig */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sig),
	    3, CHERIABI_SYS_cheriabi_lio_listio_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kbounce_fill_uap(struct thread *td,
    struct cheriabi_kbounce_args *uap)
{
	void * __capability tmpcap;

	/* [2] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_kbounce_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [3] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_kbounce_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] const void * __capability src */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->src),
	    0, CHERIABI_SYS_cheriabi_kbounce_PTRMASK);

	/* [1] void * __capability dst */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->dst),
	    1, CHERIABI_SYS_cheriabi_kbounce_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_lchmod_fill_uap(struct thread *td,
    struct cheriabi_lchmod_args *uap)
{
	void * __capability tmpcap;

	/* [1] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_lchmod_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_lchmod_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_lutimes_fill_uap(struct thread *td,
    struct cheriabi_lutimes_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_lutimes_PTRMASK);

	/* [1] const struct timeval * __capability tptr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->tptr),
	    1, CHERIABI_SYS_cheriabi_lutimes_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_preadv_fill_uap(struct thread *td,
    struct cheriabi_preadv_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_preadv_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] u_int iovcnt */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_preadv_PTRMASK);
	uap->iovcnt = cheri_getoffset(tmpcap);

	/* [3] off_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_preadv_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [1] struct iovec_c * __capability iovp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iovp),
	    1, CHERIABI_SYS_cheriabi_preadv_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_pwritev_fill_uap(struct thread *td,
    struct cheriabi_pwritev_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_pwritev_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] u_int iovcnt */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_pwritev_PTRMASK);
	uap->iovcnt = cheri_getoffset(tmpcap);

	/* [3] off_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_pwritev_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [1] struct iovec_c * __capability iovp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iovp),
	    1, CHERIABI_SYS_cheriabi_pwritev_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fhopen_fill_uap(struct thread *td,
    struct cheriabi_fhopen_args *uap)
{
	void * __capability tmpcap;

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_fhopen_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] const struct fhandle * __capability u_fhp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->u_fhp),
	    0, CHERIABI_SYS_cheriabi_fhopen_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_modnext_fill_uap(struct thread *td,
    struct modnext_args *uap)
{
	void * __capability tmpcap;

	/* [0] int modid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_modnext_PTRMASK);
	uap->modid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_modstat_fill_uap(struct thread *td,
    struct cheriabi_modstat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int modid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_modstat_PTRMASK);
	uap->modid = cheri_getoffset(tmpcap);

	/* [1] struct module_stat * __capability stat */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->stat),
	    1, CHERIABI_SYS_cheriabi_modstat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_modfnext_fill_uap(struct thread *td,
    struct modfnext_args *uap)
{
	void * __capability tmpcap;

	/* [0] int modid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_modfnext_PTRMASK);
	uap->modid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_modfind_fill_uap(struct thread *td,
    struct cheriabi_modfind_args *uap)
{

	/* [0] const char * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    0, CHERIABI_SYS_cheriabi_modfind_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kldload_fill_uap(struct thread *td,
    struct cheriabi_kldload_args *uap)
{

	/* [0] const char * __capability file */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->file),
	    0, CHERIABI_SYS_cheriabi_kldload_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_kldunload_fill_uap(struct thread *td,
    struct kldunload_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fileid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_kldunload_PTRMASK);
	uap->fileid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kldfind_fill_uap(struct thread *td,
    struct cheriabi_kldfind_args *uap)
{

	/* [0] const char * __capability file */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->file),
	    0, CHERIABI_SYS_cheriabi_kldfind_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_kldnext_fill_uap(struct thread *td,
    struct kldnext_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fileid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_kldnext_PTRMASK);
	uap->fileid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kldstat_fill_uap(struct thread *td,
    struct cheriabi_kldstat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fileid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_kldstat_PTRMASK);
	uap->fileid = cheri_getoffset(tmpcap);

	/* [1] struct kld_file_stat_c * __capability stat */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->stat),
	    1, CHERIABI_SYS_cheriabi_kldstat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_kldfirstmod_fill_uap(struct thread *td,
    struct kldfirstmod_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fileid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_kldfirstmod_PTRMASK);
	uap->fileid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_getsid_fill_uap(struct thread *td,
    struct getsid_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_getsid_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_setresuid_fill_uap(struct thread *td,
    struct setresuid_args *uap)
{
	void * __capability tmpcap;

	/* [0] uid_t ruid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setresuid_PTRMASK);
	uap->ruid = cheri_getoffset(tmpcap);

	/* [1] uid_t euid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_setresuid_PTRMASK);
	uap->euid = cheri_getoffset(tmpcap);

	/* [2] uid_t suid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_setresuid_PTRMASK);
	uap->suid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_setresgid_fill_uap(struct thread *td,
    struct setresgid_args *uap)
{
	void * __capability tmpcap;

	/* [0] gid_t rgid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_setresgid_PTRMASK);
	uap->rgid = cheri_getoffset(tmpcap);

	/* [1] gid_t egid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_setresgid_PTRMASK);
	uap->egid = cheri_getoffset(tmpcap);

	/* [2] gid_t sgid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_setresgid_PTRMASK);
	uap->sgid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_return_fill_uap(struct thread *td,
    struct cheriabi_aio_return_args *uap)
{

	/* [0] struct aiocb_c * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    0, CHERIABI_SYS_cheriabi_aio_return_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_suspend_fill_uap(struct thread *td,
    struct cheriabi_aio_suspend_args *uap)
{
	void * __capability tmpcap;

	/* [1] int nent */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_aio_suspend_PTRMASK);
	uap->nent = cheri_getoffset(tmpcap);

	/* [0] struct aiocb_c * __capability const * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    0, CHERIABI_SYS_cheriabi_aio_suspend_PTRMASK);

	/* [2] const struct timespec * __capability timeout */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->timeout),
	    2, CHERIABI_SYS_cheriabi_aio_suspend_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_cancel_fill_uap(struct thread *td,
    struct cheriabi_aio_cancel_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_aio_cancel_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] struct aiocb_c * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    1, CHERIABI_SYS_cheriabi_aio_cancel_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_error_fill_uap(struct thread *td,
    struct cheriabi_aio_error_args *uap)
{

	/* [0] struct aiocb_c * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    0, CHERIABI_SYS_cheriabi_aio_error_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_mlockall_fill_uap(struct thread *td,
    struct mlockall_args *uap)
{
	void * __capability tmpcap;

	/* [0] int how */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_mlockall_PTRMASK);
	uap->how = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___getcwd_fill_uap(struct thread *td,
    struct cheriabi___getcwd_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t buflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___getcwd_PTRMASK);
	uap->buflen = cheri_getoffset(tmpcap);

	/* [0] char * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    0, CHERIABI_SYS_cheriabi___getcwd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sched_setparam_fill_uap(struct thread *td,
    struct cheriabi_sched_setparam_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sched_setparam_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] const struct sched_param * __capability param */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->param),
	    1, CHERIABI_SYS_cheriabi_sched_setparam_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sched_getparam_fill_uap(struct thread *td,
    struct cheriabi_sched_getparam_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sched_getparam_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] struct sched_param * __capability param */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->param),
	    1, CHERIABI_SYS_cheriabi_sched_getparam_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sched_setscheduler_fill_uap(struct thread *td,
    struct cheriabi_sched_setscheduler_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sched_setscheduler_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] int policy */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_sched_setscheduler_PTRMASK);
	uap->policy = cheri_getoffset(tmpcap);

	/* [2] const struct sched_param * __capability param */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->param),
	    2, CHERIABI_SYS_cheriabi_sched_setscheduler_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_sched_getscheduler_fill_uap(struct thread *td,
    struct sched_getscheduler_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_sched_getscheduler_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_sched_get_priority_max_fill_uap(struct thread *td,
    struct sched_get_priority_max_args *uap)
{
	void * __capability tmpcap;

	/* [0] int policy */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_sched_get_priority_max_PTRMASK);
	uap->policy = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_sched_get_priority_min_fill_uap(struct thread *td,
    struct sched_get_priority_min_args *uap)
{
	void * __capability tmpcap;

	/* [0] int policy */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_sched_get_priority_min_PTRMASK);
	uap->policy = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sched_rr_get_interval_fill_uap(struct thread *td,
    struct cheriabi_sched_rr_get_interval_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sched_rr_get_interval_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] struct timespec * __capability interval */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->interval),
	    1, CHERIABI_SYS_cheriabi_sched_rr_get_interval_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_utrace_fill_uap(struct thread *td,
    struct cheriabi_utrace_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_utrace_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [0] const void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_utrace_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kldsym_fill_uap(struct thread *td,
    struct cheriabi_kldsym_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fileid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_kldsym_PTRMASK);
	uap->fileid = cheri_getoffset(tmpcap);

	/* [1] int cmd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_kldsym_PTRMASK);
	uap->cmd = cheri_getoffset(tmpcap);

	/* [2] struct kld_sym_lookup_c * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    2, CHERIABI_SYS_cheriabi_kldsym_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_jail_fill_uap(struct thread *td,
    struct cheriabi_jail_args *uap)
{

	/* [0] struct jail_c * __capability jailp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->jailp),
	    0, CHERIABI_SYS_cheriabi_jail_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigprocmask_fill_uap(struct thread *td,
    struct cheriabi_sigprocmask_args *uap)
{
	void * __capability tmpcap;

	/* [0] int how */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sigprocmask_PTRMASK);
	uap->how = cheri_getoffset(tmpcap);

	/* [1] const sigset_t * __capability set */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->set),
	    1, CHERIABI_SYS_cheriabi_sigprocmask_PTRMASK);

	/* [2] sigset_t * __capability oset */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->oset),
	    2, CHERIABI_SYS_cheriabi_sigprocmask_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigsuspend_fill_uap(struct thread *td,
    struct cheriabi_sigsuspend_args *uap)
{

	/* [0] const sigset_t * __capability sigmask */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sigmask),
	    0, CHERIABI_SYS_cheriabi_sigsuspend_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigpending_fill_uap(struct thread *td,
    struct cheriabi_sigpending_args *uap)
{

	/* [0] sigset_t * __capability set */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->set),
	    0, CHERIABI_SYS_cheriabi_sigpending_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigtimedwait_fill_uap(struct thread *td,
    struct cheriabi_sigtimedwait_args *uap)
{

	/* [0] const sigset_t * __capability set */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->set),
	    0, CHERIABI_SYS_cheriabi_sigtimedwait_PTRMASK);

	/* [1] struct siginfo_c * __capability info */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->info),
	    1, CHERIABI_SYS_cheriabi_sigtimedwait_PTRMASK);

	/* [2] const struct timespec * __capability timeout */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->timeout),
	    2, CHERIABI_SYS_cheriabi_sigtimedwait_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigwaitinfo_fill_uap(struct thread *td,
    struct cheriabi_sigwaitinfo_args *uap)
{

	/* [0] const sigset_t * __capability set */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->set),
	    0, CHERIABI_SYS_cheriabi_sigwaitinfo_PTRMASK);

	/* [1] struct siginfo_c * __capability info */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->info),
	    1, CHERIABI_SYS_cheriabi_sigwaitinfo_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_get_file_fill_uap(struct thread *td,
    struct cheriabi___acl_get_file_args *uap)
{
	void * __capability tmpcap;

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_get_file_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi___acl_get_file_PTRMASK);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_get_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_set_file_fill_uap(struct thread *td,
    struct cheriabi___acl_set_file_args *uap)
{
	void * __capability tmpcap;

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_set_file_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi___acl_set_file_PTRMASK);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_set_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_get_fd_fill_uap(struct thread *td,
    struct cheriabi___acl_get_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int filedes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi___acl_get_fd_PTRMASK);
	uap->filedes = cheri_getoffset(tmpcap);

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_get_fd_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_get_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_set_fd_fill_uap(struct thread *td,
    struct cheriabi___acl_set_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int filedes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi___acl_set_fd_PTRMASK);
	uap->filedes = cheri_getoffset(tmpcap);

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_set_fd_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_set_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_delete_file_fill_uap(struct thread *td,
    struct cheriabi___acl_delete_file_args *uap)
{
	void * __capability tmpcap;

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_delete_file_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi___acl_delete_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS___acl_delete_fd_fill_uap(struct thread *td,
    struct __acl_delete_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int filedes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS___acl_delete_fd_PTRMASK);
	uap->filedes = cheri_getoffset(tmpcap);

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS___acl_delete_fd_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_aclcheck_file_fill_uap(struct thread *td,
    struct cheriabi___acl_aclcheck_file_args *uap)
{
	void * __capability tmpcap;

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_aclcheck_file_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi___acl_aclcheck_file_PTRMASK);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_aclcheck_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_aclcheck_fd_fill_uap(struct thread *td,
    struct cheriabi___acl_aclcheck_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int filedes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi___acl_aclcheck_fd_PTRMASK);
	uap->filedes = cheri_getoffset(tmpcap);

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_aclcheck_fd_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_aclcheck_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattrctl_fill_uap(struct thread *td,
    struct cheriabi_extattrctl_args *uap)
{
	void * __capability tmpcap;

	/* [1] int cmd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattrctl_PTRMASK);
	uap->cmd = cheri_getoffset(tmpcap);

	/* [3] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_extattrctl_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattrctl_PTRMASK);

	/* [2] const char * __capability filename */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->filename),
	    2, CHERIABI_SYS_cheriabi_extattrctl_PTRMASK);

	/* [4] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    4, CHERIABI_SYS_cheriabi_extattrctl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_set_file_fill_uap(struct thread *td,
    struct cheriabi_extattr_set_file_args *uap)
{
	void * __capability tmpcap;

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_set_file_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [4] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_extattr_set_file_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattr_set_file_PTRMASK);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_set_file_PTRMASK);

	/* [3] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    3, CHERIABI_SYS_cheriabi_extattr_set_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_get_file_fill_uap(struct thread *td,
    struct cheriabi_extattr_get_file_args *uap)
{
	void * __capability tmpcap;

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_get_file_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [4] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_extattr_get_file_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattr_get_file_PTRMASK);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_get_file_PTRMASK);

	/* [3] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    3, CHERIABI_SYS_cheriabi_extattr_get_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_delete_file_fill_uap(struct thread *td,
    struct cheriabi_extattr_delete_file_args *uap)
{
	void * __capability tmpcap;

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_delete_file_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattr_delete_file_PTRMASK);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_delete_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_waitcomplete_fill_uap(struct thread *td,
    struct cheriabi_aio_waitcomplete_args *uap)
{

	/* [0] struct aiocb_c * __capability * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    0, CHERIABI_SYS_cheriabi_aio_waitcomplete_PTRMASK);

	/* [1] struct timespec * __capability timeout */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->timeout),
	    1, CHERIABI_SYS_cheriabi_aio_waitcomplete_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getresuid_fill_uap(struct thread *td,
    struct cheriabi_getresuid_args *uap)
{

	/* [0] uid_t * __capability ruid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ruid),
	    0, CHERIABI_SYS_cheriabi_getresuid_PTRMASK);

	/* [1] uid_t * __capability euid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->euid),
	    1, CHERIABI_SYS_cheriabi_getresuid_PTRMASK);

	/* [2] uid_t * __capability suid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->suid),
	    2, CHERIABI_SYS_cheriabi_getresuid_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getresgid_fill_uap(struct thread *td,
    struct cheriabi_getresgid_args *uap)
{

	/* [0] gid_t * __capability rgid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rgid),
	    0, CHERIABI_SYS_cheriabi_getresgid_PTRMASK);

	/* [1] gid_t * __capability egid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->egid),
	    1, CHERIABI_SYS_cheriabi_getresgid_PTRMASK);

	/* [2] gid_t * __capability sgid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sgid),
	    2, CHERIABI_SYS_cheriabi_getresgid_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_set_fd_fill_uap(struct thread *td,
    struct cheriabi_extattr_set_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_extattr_set_fd_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_set_fd_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [4] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_extattr_set_fd_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_set_fd_PTRMASK);

	/* [3] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    3, CHERIABI_SYS_cheriabi_extattr_set_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_get_fd_fill_uap(struct thread *td,
    struct cheriabi_extattr_get_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_extattr_get_fd_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_get_fd_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [4] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_extattr_get_fd_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_get_fd_PTRMASK);

	/* [3] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    3, CHERIABI_SYS_cheriabi_extattr_get_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_delete_fd_fill_uap(struct thread *td,
    struct cheriabi_extattr_delete_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_extattr_delete_fd_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_delete_fd_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_delete_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS___setugid_fill_uap(struct thread *td,
    struct __setugid_args *uap)
{
	void * __capability tmpcap;

	/* [0] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS___setugid_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_eaccess_fill_uap(struct thread *td,
    struct cheriabi_eaccess_args *uap)
{
	void * __capability tmpcap;

	/* [1] int amode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_eaccess_PTRMASK);
	uap->amode = cheri_getoffset(tmpcap);

	/* [0] char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_eaccess_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_nmount_fill_uap(struct thread *td,
    struct cheriabi_nmount_args *uap)
{
	void * __capability tmpcap;

	/* [1] unsigned int iovcnt */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_nmount_PTRMASK);
	uap->iovcnt = cheri_getoffset(tmpcap);

	/* [2] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_nmount_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] struct iovec_c * __capability iovp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iovp),
	    0, CHERIABI_SYS_cheriabi_nmount_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_get_proc_fill_uap(struct thread *td,
    struct cheriabi___mac_get_proc_args *uap)
{

	/* [0] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    0, CHERIABI_SYS_cheriabi___mac_get_proc_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_set_proc_fill_uap(struct thread *td,
    struct cheriabi___mac_set_proc_args *uap)
{

	/* [0] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    0, CHERIABI_SYS_cheriabi___mac_set_proc_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_get_fd_fill_uap(struct thread *td,
    struct cheriabi___mac_get_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi___mac_get_fd_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    1, CHERIABI_SYS_cheriabi___mac_get_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_get_file_fill_uap(struct thread *td,
    struct cheriabi___mac_get_file_args *uap)
{

	/* [0] const char * __capability path_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path_p),
	    0, CHERIABI_SYS_cheriabi___mac_get_file_PTRMASK);

	/* [1] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    1, CHERIABI_SYS_cheriabi___mac_get_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_set_fd_fill_uap(struct thread *td,
    struct cheriabi___mac_set_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi___mac_set_fd_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    1, CHERIABI_SYS_cheriabi___mac_set_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_set_file_fill_uap(struct thread *td,
    struct cheriabi___mac_set_file_args *uap)
{

	/* [0] const char * __capability path_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path_p),
	    0, CHERIABI_SYS_cheriabi___mac_set_file_PTRMASK);

	/* [1] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    1, CHERIABI_SYS_cheriabi___mac_set_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kenv_fill_uap(struct thread *td,
    struct cheriabi_kenv_args *uap)
{
	void * __capability tmpcap;

	/* [0] int what */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_kenv_PTRMASK);
	uap->what = cheri_getoffset(tmpcap);

	/* [3] int len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_kenv_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [1] const char * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    1, CHERIABI_SYS_cheriabi_kenv_PTRMASK);

	/* [2] char * __capability value */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->value),
	    2, CHERIABI_SYS_cheriabi_kenv_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_lchflags_fill_uap(struct thread *td,
    struct cheriabi_lchflags_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_long flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_lchflags_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_lchflags_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_uuidgen_fill_uap(struct thread *td,
    struct cheriabi_uuidgen_args *uap)
{
	void * __capability tmpcap;

	/* [1] int count */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_uuidgen_PTRMASK);
	uap->count = cheri_getoffset(tmpcap);

	/* [0] struct uuid * __capability store */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->store),
	    0, CHERIABI_SYS_cheriabi_uuidgen_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sendfile_fill_uap(struct thread *td,
    struct cheriabi_sendfile_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sendfile_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_sendfile_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [2] off_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_sendfile_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [3] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_sendfile_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [6] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 6, CHERIABI_SYS_cheriabi_sendfile_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [4] struct sf_hdtr_c * __capability hdtr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->hdtr),
	    4, CHERIABI_SYS_cheriabi_sendfile_PTRMASK);

	/* [5] off_t * __capability sbytes */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sbytes),
	    5, CHERIABI_SYS_cheriabi_sendfile_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mac_syscall_fill_uap(struct thread *td,
    struct cheriabi_mac_syscall_args *uap)
{
	void * __capability tmpcap;

	/* [1] int call */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_mac_syscall_PTRMASK);
	uap->call = cheri_getoffset(tmpcap);

	/* [0] const char * __capability policy */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->policy),
	    0, CHERIABI_SYS_cheriabi_mac_syscall_PTRMASK);

	/* [2] void * __capability arg */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->arg),
	    2, CHERIABI_SYS_cheriabi_mac_syscall_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_get_pid_fill_uap(struct thread *td,
    struct cheriabi___mac_get_pid_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi___mac_get_pid_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    1, CHERIABI_SYS_cheriabi___mac_get_pid_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_get_link_fill_uap(struct thread *td,
    struct cheriabi___mac_get_link_args *uap)
{

	/* [0] const char * __capability path_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path_p),
	    0, CHERIABI_SYS_cheriabi___mac_get_link_PTRMASK);

	/* [1] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    1, CHERIABI_SYS_cheriabi___mac_get_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_set_link_fill_uap(struct thread *td,
    struct cheriabi___mac_set_link_args *uap)
{

	/* [0] const char * __capability path_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path_p),
	    0, CHERIABI_SYS_cheriabi___mac_set_link_PTRMASK);

	/* [1] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    1, CHERIABI_SYS_cheriabi___mac_set_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_set_link_fill_uap(struct thread *td,
    struct cheriabi_extattr_set_link_args *uap)
{
	void * __capability tmpcap;

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_set_link_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [4] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_extattr_set_link_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattr_set_link_PTRMASK);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_set_link_PTRMASK);

	/* [3] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    3, CHERIABI_SYS_cheriabi_extattr_set_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_get_link_fill_uap(struct thread *td,
    struct cheriabi_extattr_get_link_args *uap)
{
	void * __capability tmpcap;

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_get_link_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [4] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_extattr_get_link_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattr_get_link_PTRMASK);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_get_link_PTRMASK);

	/* [3] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    3, CHERIABI_SYS_cheriabi_extattr_get_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_delete_link_fill_uap(struct thread *td,
    struct cheriabi_extattr_delete_link_args *uap)
{
	void * __capability tmpcap;

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_delete_link_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattr_delete_link_PTRMASK);

	/* [2] const char * __capability attrname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attrname),
	    2, CHERIABI_SYS_cheriabi_extattr_delete_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___mac_execve_fill_uap(struct thread *td,
    struct cheriabi___mac_execve_args *uap)
{

	/* [0] char * __capability fname */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fname),
	    0, CHERIABI_SYS_cheriabi___mac_execve_PTRMASK);

	/* [1] void * __capability * __capability argv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->argv),
	    1, CHERIABI_SYS_cheriabi___mac_execve_PTRMASK);

	/* [2] void * __capability * __capability envv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->envv),
	    2, CHERIABI_SYS_cheriabi___mac_execve_PTRMASK);

	/* [3] struct mac_c * __capability mac_p */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mac_p),
	    3, CHERIABI_SYS_cheriabi___mac_execve_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigaction_fill_uap(struct thread *td,
    struct cheriabi_sigaction_args *uap)
{
	void * __capability tmpcap;

	/* [0] int sig */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sigaction_PTRMASK);
	uap->sig = cheri_getoffset(tmpcap);

	/* [1] struct sigaction_c * __capability act */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->act),
	    1, CHERIABI_SYS_cheriabi_sigaction_PTRMASK);

	/* [2] struct sigaction_c * __capability oact */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->oact),
	    2, CHERIABI_SYS_cheriabi_sigaction_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigreturn_fill_uap(struct thread *td,
    struct cheriabi_sigreturn_args *uap)
{

	/* [0] const ucontext_c_t * __capability sigcntxp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sigcntxp),
	    0, CHERIABI_SYS_cheriabi_sigreturn_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getcontext_fill_uap(struct thread *td,
    struct cheriabi_getcontext_args *uap)
{

	/* [0] ucontext_c_t * __capability ucp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ucp),
	    0, CHERIABI_SYS_cheriabi_getcontext_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setcontext_fill_uap(struct thread *td,
    struct cheriabi_setcontext_args *uap)
{

	/* [0] const ucontext_c_t * __capability ucp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ucp),
	    0, CHERIABI_SYS_cheriabi_setcontext_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_swapcontext_fill_uap(struct thread *td,
    struct cheriabi_swapcontext_args *uap)
{

	/* [0] ucontext_c_t * __capability oucp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->oucp),
	    0, CHERIABI_SYS_cheriabi_swapcontext_PTRMASK);

	/* [1] const ucontext_c_t * __capability ucp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ucp),
	    1, CHERIABI_SYS_cheriabi_swapcontext_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_swapoff_fill_uap(struct thread *td,
    struct cheriabi_swapoff_args *uap)
{

	/* [0] const char * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    0, CHERIABI_SYS_cheriabi_swapoff_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_get_link_fill_uap(struct thread *td,
    struct cheriabi___acl_get_link_args *uap)
{
	void * __capability tmpcap;

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_get_link_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi___acl_get_link_PTRMASK);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_get_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_set_link_fill_uap(struct thread *td,
    struct cheriabi___acl_set_link_args *uap)
{
	void * __capability tmpcap;

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_set_link_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi___acl_set_link_PTRMASK);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_set_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_delete_link_fill_uap(struct thread *td,
    struct cheriabi___acl_delete_link_args *uap)
{
	void * __capability tmpcap;

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_delete_link_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi___acl_delete_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___acl_aclcheck_link_fill_uap(struct thread *td,
    struct cheriabi___acl_aclcheck_link_args *uap)
{
	void * __capability tmpcap;

	/* [1] acl_type_t type */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___acl_aclcheck_link_PTRMASK);
	uap->type = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi___acl_aclcheck_link_PTRMASK);

	/* [2] struct acl * __capability aclp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aclp),
	    2, CHERIABI_SYS_cheriabi___acl_aclcheck_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigwait_fill_uap(struct thread *td,
    struct cheriabi_sigwait_args *uap)
{

	/* [0] const sigset_t * __capability set */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->set),
	    0, CHERIABI_SYS_cheriabi_sigwait_PTRMASK);

	/* [1] int * __capability sig */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sig),
	    1, CHERIABI_SYS_cheriabi_sigwait_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_thr_create_fill_uap(struct thread *td,
    struct cheriabi_thr_create_args *uap)
{
	void * __capability tmpcap;

	/* [2] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_thr_create_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] ucontext_c_t * __capability ctx */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ctx),
	    0, CHERIABI_SYS_cheriabi_thr_create_PTRMASK);

	/* [1] long * __capability id */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->id),
	    1, CHERIABI_SYS_cheriabi_thr_create_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_thr_exit_fill_uap(struct thread *td,
    struct cheriabi_thr_exit_args *uap)
{

	/* [0] long * __capability state */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->state),
	    0, CHERIABI_SYS_cheriabi_thr_exit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_thr_self_fill_uap(struct thread *td,
    struct cheriabi_thr_self_args *uap)
{

	/* [0] long * __capability id */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->id),
	    0, CHERIABI_SYS_cheriabi_thr_self_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_thr_kill_fill_uap(struct thread *td,
    struct thr_kill_args *uap)
{
	void * __capability tmpcap;

	/* [0] long id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_thr_kill_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [1] int sig */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_thr_kill_PTRMASK);
	uap->sig = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_jail_attach_fill_uap(struct thread *td,
    struct jail_attach_args *uap)
{
	void * __capability tmpcap;

	/* [0] int jid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_jail_attach_PTRMASK);
	uap->jid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_list_fd_fill_uap(struct thread *td,
    struct cheriabi_extattr_list_fd_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_extattr_list_fd_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_list_fd_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [3] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_extattr_list_fd_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [2] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    2, CHERIABI_SYS_cheriabi_extattr_list_fd_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_list_file_fill_uap(struct thread *td,
    struct cheriabi_extattr_list_file_args *uap)
{
	void * __capability tmpcap;

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_list_file_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [3] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_extattr_list_file_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattr_list_file_PTRMASK);

	/* [2] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    2, CHERIABI_SYS_cheriabi_extattr_list_file_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_extattr_list_link_fill_uap(struct thread *td,
    struct cheriabi_extattr_list_link_args *uap)
{
	void * __capability tmpcap;

	/* [1] int attrnamespace */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_extattr_list_link_PTRMASK);
	uap->attrnamespace = cheri_getoffset(tmpcap);

	/* [3] size_t nbytes */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_extattr_list_link_PTRMASK);
	uap->nbytes = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_extattr_list_link_PTRMASK);

	/* [2] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    2, CHERIABI_SYS_cheriabi_extattr_list_link_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_thr_suspend_fill_uap(struct thread *td,
    struct cheriabi_thr_suspend_args *uap)
{

	/* [0] const struct timespec * __capability timeout */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->timeout),
	    0, CHERIABI_SYS_cheriabi_thr_suspend_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_thr_wake_fill_uap(struct thread *td,
    struct thr_wake_args *uap)
{
	void * __capability tmpcap;

	/* [0] long id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_thr_wake_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_kldunloadf_fill_uap(struct thread *td,
    struct kldunloadf_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fileid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_kldunloadf_PTRMASK);
	uap->fileid = cheri_getoffset(tmpcap);

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_kldunloadf_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_audit_fill_uap(struct thread *td,
    struct cheriabi_audit_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_int length */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_audit_PTRMASK);
	uap->length = cheri_getoffset(tmpcap);

	/* [0] const void * __capability record */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->record),
	    0, CHERIABI_SYS_cheriabi_audit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_auditon_fill_uap(struct thread *td,
    struct cheriabi_auditon_args *uap)
{
	void * __capability tmpcap;

	/* [0] int cmd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_auditon_PTRMASK);
	uap->cmd = cheri_getoffset(tmpcap);

	/* [2] u_int length */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_auditon_PTRMASK);
	uap->length = cheri_getoffset(tmpcap);

	/* [1] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    1, CHERIABI_SYS_cheriabi_auditon_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getauid_fill_uap(struct thread *td,
    struct cheriabi_getauid_args *uap)
{

	/* [0] uid_t * __capability auid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->auid),
	    0, CHERIABI_SYS_cheriabi_getauid_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setauid_fill_uap(struct thread *td,
    struct cheriabi_setauid_args *uap)
{

	/* [0] uid_t * __capability auid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->auid),
	    0, CHERIABI_SYS_cheriabi_setauid_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getaudit_fill_uap(struct thread *td,
    struct cheriabi_getaudit_args *uap)
{

	/* [0] struct auditinfo * __capability auditinfo */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->auditinfo),
	    0, CHERIABI_SYS_cheriabi_getaudit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setaudit_fill_uap(struct thread *td,
    struct cheriabi_setaudit_args *uap)
{

	/* [0] struct auditinfo * __capability auditinfo */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->auditinfo),
	    0, CHERIABI_SYS_cheriabi_setaudit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getaudit_addr_fill_uap(struct thread *td,
    struct cheriabi_getaudit_addr_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_int length */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_getaudit_addr_PTRMASK);
	uap->length = cheri_getoffset(tmpcap);

	/* [0] struct auditinfo_addr * __capability auditinfo_addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->auditinfo_addr),
	    0, CHERIABI_SYS_cheriabi_getaudit_addr_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setaudit_addr_fill_uap(struct thread *td,
    struct cheriabi_setaudit_addr_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_int length */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_setaudit_addr_PTRMASK);
	uap->length = cheri_getoffset(tmpcap);

	/* [0] struct auditinfo_addr * __capability auditinfo_addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->auditinfo_addr),
	    0, CHERIABI_SYS_cheriabi_setaudit_addr_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_auditctl_fill_uap(struct thread *td,
    struct cheriabi_auditctl_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_auditctl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi__umtx_op_fill_uap(struct thread *td,
    struct cheriabi__umtx_op_args *uap)
{
	void * __capability tmpcap;

	/* [1] int op */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi__umtx_op_PTRMASK);
	uap->op = cheri_getoffset(tmpcap);

	/* [2] u_long val */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi__umtx_op_PTRMASK);
	uap->val = cheri_getoffset(tmpcap);

	/* [0] void * __capability obj */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->obj),
	    0, CHERIABI_SYS_cheriabi__umtx_op_PTRMASK);

	/* [3] void * __capability uaddr1 */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->uaddr1),
	    3, CHERIABI_SYS_cheriabi__umtx_op_PTRMASK);

	/* [4] void * __capability uaddr2 */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->uaddr2),
	    4, CHERIABI_SYS_cheriabi__umtx_op_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_thr_new_fill_uap(struct thread *td,
    struct cheriabi_thr_new_args *uap)
{
	void * __capability tmpcap;

	/* [1] int param_size */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_thr_new_PTRMASK);
	uap->param_size = cheri_getoffset(tmpcap);

	/* [0] struct thr_param_c * __capability param */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->param),
	    0, CHERIABI_SYS_cheriabi_thr_new_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sigqueue_fill_uap(struct thread *td,
    struct cheriabi_sigqueue_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sigqueue_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] int signum */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_sigqueue_PTRMASK);
	uap->signum = cheri_getoffset(tmpcap);

	/* [2] void * __capability value */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->value),
	    2, CHERIABI_SYS_cheriabi_sigqueue_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kmq_open_fill_uap(struct thread *td,
    struct cheriabi_kmq_open_args *uap)
{
	void * __capability tmpcap;

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_kmq_open_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [2] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_kmq_open_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_kmq_open_PTRMASK);

	/* [3] const struct mq_attr * __capability attr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attr),
	    3, CHERIABI_SYS_cheriabi_kmq_open_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kmq_setattr_fill_uap(struct thread *td,
    struct cheriabi_kmq_setattr_args *uap)
{
	void * __capability tmpcap;

	/* [0] int mqd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_kmq_setattr_PTRMASK);
	uap->mqd = cheri_getoffset(tmpcap);

	/* [1] const struct mq_attr * __capability attr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->attr),
	    1, CHERIABI_SYS_cheriabi_kmq_setattr_PTRMASK);

	/* [2] struct mq_attr * __capability oattr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->oattr),
	    2, CHERIABI_SYS_cheriabi_kmq_setattr_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kmq_timedreceive_fill_uap(struct thread *td,
    struct cheriabi_kmq_timedreceive_args *uap)
{
	void * __capability tmpcap;

	/* [0] int mqd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_kmq_timedreceive_PTRMASK);
	uap->mqd = cheri_getoffset(tmpcap);

	/* [2] size_t msg_len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_kmq_timedreceive_PTRMASK);
	uap->msg_len = cheri_getoffset(tmpcap);

	/* [1] char * __capability msg_ptr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msg_ptr),
	    1, CHERIABI_SYS_cheriabi_kmq_timedreceive_PTRMASK);

	/* [3] unsigned * __capability msg_prio */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msg_prio),
	    3, CHERIABI_SYS_cheriabi_kmq_timedreceive_PTRMASK);

	/* [4] const struct timespec * __capability abs_timeout */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->abs_timeout),
	    4, CHERIABI_SYS_cheriabi_kmq_timedreceive_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kmq_timedsend_fill_uap(struct thread *td,
    struct cheriabi_kmq_timedsend_args *uap)
{
	void * __capability tmpcap;

	/* [0] int mqd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_kmq_timedsend_PTRMASK);
	uap->mqd = cheri_getoffset(tmpcap);

	/* [2] size_t msg_len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_kmq_timedsend_PTRMASK);
	uap->msg_len = cheri_getoffset(tmpcap);

	/* [3] unsigned msg_prio */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_kmq_timedsend_PTRMASK);
	uap->msg_prio = cheri_getoffset(tmpcap);

	/* [1] const char * __capability msg_ptr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msg_ptr),
	    1, CHERIABI_SYS_cheriabi_kmq_timedsend_PTRMASK);

	/* [4] const struct timespec * __capability abs_timeout */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->abs_timeout),
	    4, CHERIABI_SYS_cheriabi_kmq_timedsend_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kmq_notify_fill_uap(struct thread *td,
    struct cheriabi_kmq_notify_args *uap)
{
	void * __capability tmpcap;

	/* [0] int mqd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_kmq_notify_PTRMASK);
	uap->mqd = cheri_getoffset(tmpcap);

	/* [1] const struct sigevent_c * __capability sigev */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sigev),
	    1, CHERIABI_SYS_cheriabi_kmq_notify_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kmq_unlink_fill_uap(struct thread *td,
    struct cheriabi_kmq_unlink_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_kmq_unlink_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_abort2_fill_uap(struct thread *td,
    struct cheriabi_abort2_args *uap)
{
	void * __capability tmpcap;

	/* [1] int nargs */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_abort2_PTRMASK);
	uap->nargs = cheri_getoffset(tmpcap);

	/* [0] const char * __capability why */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->why),
	    0, CHERIABI_SYS_cheriabi_abort2_PTRMASK);

	/* [2] void * __capability * __capability args */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->args),
	    2, CHERIABI_SYS_cheriabi_abort2_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_thr_set_name_fill_uap(struct thread *td,
    struct cheriabi_thr_set_name_args *uap)
{
	void * __capability tmpcap;

	/* [0] long id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_thr_set_name_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [1] const char * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    1, CHERIABI_SYS_cheriabi_thr_set_name_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_fsync_fill_uap(struct thread *td,
    struct cheriabi_aio_fsync_args *uap)
{
	void * __capability tmpcap;

	/* [0] int op */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_aio_fsync_PTRMASK);
	uap->op = cheri_getoffset(tmpcap);

	/* [1] struct aiocb_c * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    1, CHERIABI_SYS_cheriabi_aio_fsync_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rtprio_thread_fill_uap(struct thread *td,
    struct cheriabi_rtprio_thread_args *uap)
{
	void * __capability tmpcap;

	/* [0] int function */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_rtprio_thread_PTRMASK);
	uap->function = cheri_getoffset(tmpcap);

	/* [1] lwpid_t lwpid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_rtprio_thread_PTRMASK);
	uap->lwpid = cheri_getoffset(tmpcap);

	/* [2] struct rtprio * __capability rtp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rtp),
	    2, CHERIABI_SYS_cheriabi_rtprio_thread_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_sctp_peeloff_fill_uap(struct thread *td,
    struct sctp_peeloff_args *uap)
{
	void * __capability tmpcap;

	/* [0] int sd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_sctp_peeloff_PTRMASK);
	uap->sd = cheri_getoffset(tmpcap);

	/* [1] uint32_t name */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_sctp_peeloff_PTRMASK);
	uap->name = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_fill_uap(struct thread *td,
    struct cheriabi_sctp_generic_sendmsg_args *uap)
{
	void * __capability tmpcap;

	/* [0] int sd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_PTRMASK);
	uap->sd = cheri_getoffset(tmpcap);

	/* [2] int mlen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_PTRMASK);
	uap->mlen = cheri_getoffset(tmpcap);

	/* [4] __socklen_t tolen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_PTRMASK);
	uap->tolen = cheri_getoffset(tmpcap);

	/* [6] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 6, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [1] void * __capability msg */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msg),
	    1, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_PTRMASK);

	/* [3] struct sockaddr * __capability to */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->to),
	    3, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_PTRMASK);

	/* [5] struct sctp_sndrcvinfo * __capability sinfo */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sinfo),
	    5, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_iov_fill_uap(struct thread *td,
    struct cheriabi_sctp_generic_sendmsg_iov_args *uap)
{
	void * __capability tmpcap;

	/* [0] int sd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_iov_PTRMASK);
	uap->sd = cheri_getoffset(tmpcap);

	/* [2] int iovlen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_iov_PTRMASK);
	uap->iovlen = cheri_getoffset(tmpcap);

	/* [4] __socklen_t tolen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_iov_PTRMASK);
	uap->tolen = cheri_getoffset(tmpcap);

	/* [6] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 6, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_iov_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [1] struct iovec_c * __capability iov */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iov),
	    1, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_iov_PTRMASK);

	/* [3] struct sockaddr * __capability to */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->to),
	    3, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_iov_PTRMASK);

	/* [5] struct sctp_sndrcvinfo * __capability sinfo */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sinfo),
	    5, CHERIABI_SYS_cheriabi_sctp_generic_sendmsg_iov_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_sctp_generic_recvmsg_fill_uap(struct thread *td,
    struct cheriabi_sctp_generic_recvmsg_args *uap)
{
	void * __capability tmpcap;

	/* [0] int sd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_sctp_generic_recvmsg_PTRMASK);
	uap->sd = cheri_getoffset(tmpcap);

	/* [2] int iovlen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_sctp_generic_recvmsg_PTRMASK);
	uap->iovlen = cheri_getoffset(tmpcap);

	/* [1] struct iovec_c * __capability iov */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iov),
	    1, CHERIABI_SYS_cheriabi_sctp_generic_recvmsg_PTRMASK);

	/* [3] struct sockaddr * __capability from */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->from),
	    3, CHERIABI_SYS_cheriabi_sctp_generic_recvmsg_PTRMASK);

	/* [4] __socklen_t * __capability fromlenaddr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fromlenaddr),
	    4, CHERIABI_SYS_cheriabi_sctp_generic_recvmsg_PTRMASK);

	/* [5] struct sctp_sndrcvinfo * __capability sinfo */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sinfo),
	    5, CHERIABI_SYS_cheriabi_sctp_generic_recvmsg_PTRMASK);

	/* [6] int * __capability msg_flags */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->msg_flags),
	    6, CHERIABI_SYS_cheriabi_sctp_generic_recvmsg_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_pread_fill_uap(struct thread *td,
    struct cheriabi_pread_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_pread_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] size_t nbyte */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_pread_PTRMASK);
	uap->nbyte = cheri_getoffset(tmpcap);

	/* [3] off_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_pread_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [1] void * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_pread_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_pwrite_fill_uap(struct thread *td,
    struct cheriabi_pwrite_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_pwrite_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] size_t nbyte */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_pwrite_PTRMASK);
	uap->nbyte = cheri_getoffset(tmpcap);

	/* [3] off_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_pwrite_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [1] const void * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_pwrite_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mmap_fill_uap(struct thread *td,
    struct cheriabi_mmap_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_mmap_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [2] int prot */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_mmap_PTRMASK);
	uap->prot = cheri_getoffset(tmpcap);

	/* [3] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_mmap_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [4] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_mmap_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [5] off_t pos */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 5, CHERIABI_SYS_cheriabi_mmap_PTRMASK);
	uap->pos = cheri_getoffset(tmpcap);

	/* [0] void * __capability addr */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->addr),
	    0, CHERIABI_SYS_cheriabi_mmap_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_lseek_fill_uap(struct thread *td,
    struct lseek_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_lseek_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] off_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_lseek_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [2] int whence */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_lseek_PTRMASK);
	uap->whence = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_truncate_fill_uap(struct thread *td,
    struct cheriabi_truncate_args *uap)
{
	void * __capability tmpcap;

	/* [1] off_t length */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_truncate_PTRMASK);
	uap->length = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_truncate_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_ftruncate_fill_uap(struct thread *td,
    struct ftruncate_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_ftruncate_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] off_t length */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_ftruncate_PTRMASK);
	uap->length = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_thr_kill2_fill_uap(struct thread *td,
    struct thr_kill2_args *uap)
{
	void * __capability tmpcap;

	/* [0] pid_t pid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_thr_kill2_PTRMASK);
	uap->pid = cheri_getoffset(tmpcap);

	/* [1] long id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_thr_kill2_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [2] int sig */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_thr_kill2_PTRMASK);
	uap->sig = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_shm_open_fill_uap(struct thread *td,
    struct cheriabi_shm_open_args *uap)
{
	void * __capability tmpcap;

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_shm_open_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [2] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_shm_open_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_shm_open_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_shm_unlink_fill_uap(struct thread *td,
    struct cheriabi_shm_unlink_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_shm_unlink_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cpuset_fill_uap(struct thread *td,
    struct cheriabi_cpuset_args *uap)
{

	/* [0] cpusetid_t * __capability setid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->setid),
	    0, CHERIABI_SYS_cheriabi_cpuset_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cpuset_setid_fill_uap(struct thread *td,
    struct cpuset_setid_args *uap)
{
	void * __capability tmpcap;

	/* [0] cpuwhich_t which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cpuset_setid_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [1] id_t id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cpuset_setid_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [2] cpusetid_t setid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cpuset_setid_PTRMASK);
	uap->setid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cpuset_getid_fill_uap(struct thread *td,
    struct cheriabi_cpuset_getid_args *uap)
{
	void * __capability tmpcap;

	/* [0] cpulevel_t level */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_cpuset_getid_PTRMASK);
	uap->level = cheri_getoffset(tmpcap);

	/* [1] cpuwhich_t which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_cpuset_getid_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [2] id_t id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_cpuset_getid_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [3] cpusetid_t * __capability setid */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->setid),
	    3, CHERIABI_SYS_cheriabi_cpuset_getid_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cpuset_getaffinity_fill_uap(struct thread *td,
    struct cheriabi_cpuset_getaffinity_args *uap)
{
	void * __capability tmpcap;

	/* [0] cpulevel_t level */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_cpuset_getaffinity_PTRMASK);
	uap->level = cheri_getoffset(tmpcap);

	/* [1] cpuwhich_t which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_cpuset_getaffinity_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [2] id_t id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_cpuset_getaffinity_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [3] size_t cpusetsize */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_cpuset_getaffinity_PTRMASK);
	uap->cpusetsize = cheri_getoffset(tmpcap);

	/* [4] cpuset_t * __capability mask */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mask),
	    4, CHERIABI_SYS_cheriabi_cpuset_getaffinity_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cpuset_setaffinity_fill_uap(struct thread *td,
    struct cheriabi_cpuset_setaffinity_args *uap)
{
	void * __capability tmpcap;

	/* [0] cpulevel_t level */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_cpuset_setaffinity_PTRMASK);
	uap->level = cheri_getoffset(tmpcap);

	/* [1] cpuwhich_t which */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_cpuset_setaffinity_PTRMASK);
	uap->which = cheri_getoffset(tmpcap);

	/* [2] id_t id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_cpuset_setaffinity_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [3] size_t cpusetsize */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_cpuset_setaffinity_PTRMASK);
	uap->cpusetsize = cheri_getoffset(tmpcap);

	/* [4] const cpuset_t * __capability mask */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->mask),
	    4, CHERIABI_SYS_cheriabi_cpuset_setaffinity_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_faccessat_fill_uap(struct thread *td,
    struct cheriabi_faccessat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_faccessat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] int amode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_faccessat_PTRMASK);
	uap->amode = cheri_getoffset(tmpcap);

	/* [3] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_faccessat_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_faccessat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fchmodat_fill_uap(struct thread *td,
    struct cheriabi_fchmodat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_fchmodat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_fchmodat_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [3] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_fchmodat_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_fchmodat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fchownat_fill_uap(struct thread *td,
    struct cheriabi_fchownat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_fchownat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] uid_t uid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_fchownat_PTRMASK);
	uap->uid = cheri_getoffset(tmpcap);

	/* [3] gid_t gid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_fchownat_PTRMASK);
	uap->gid = cheri_getoffset(tmpcap);

	/* [4] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_fchownat_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_fchownat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fexecve_fill_uap(struct thread *td,
    struct cheriabi_fexecve_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_fexecve_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] void * __capability * __capability argv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->argv),
	    1, CHERIABI_SYS_cheriabi_fexecve_PTRMASK);

	/* [2] void * __capability * __capability envv */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->envv),
	    2, CHERIABI_SYS_cheriabi_fexecve_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_futimesat_fill_uap(struct thread *td,
    struct cheriabi_futimesat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_futimesat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_futimesat_PTRMASK);

	/* [2] const struct timeval * __capability times */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->times),
	    2, CHERIABI_SYS_cheriabi_futimesat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_linkat_fill_uap(struct thread *td,
    struct cheriabi_linkat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd1 */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_linkat_PTRMASK);
	uap->fd1 = cheri_getoffset(tmpcap);

	/* [2] int fd2 */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_linkat_PTRMASK);
	uap->fd2 = cheri_getoffset(tmpcap);

	/* [4] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_linkat_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path1 */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path1),
	    1, CHERIABI_SYS_cheriabi_linkat_PTRMASK);

	/* [3] const char * __capability path2 */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path2),
	    3, CHERIABI_SYS_cheriabi_linkat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mkdirat_fill_uap(struct thread *td,
    struct cheriabi_mkdirat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_mkdirat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_mkdirat_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_mkdirat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mkfifoat_fill_uap(struct thread *td,
    struct cheriabi_mkfifoat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_mkfifoat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_mkfifoat_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_mkfifoat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_openat_fill_uap(struct thread *td,
    struct cheriabi_openat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_openat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_openat_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [3] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_openat_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_openat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_readlinkat_fill_uap(struct thread *td,
    struct cheriabi_readlinkat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_readlinkat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [3] size_t bufsize */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_readlinkat_PTRMASK);
	uap->bufsize = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_readlinkat_PTRMASK);

	/* [2] char * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    2, CHERIABI_SYS_cheriabi_readlinkat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_renameat_fill_uap(struct thread *td,
    struct cheriabi_renameat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int oldfd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_renameat_PTRMASK);
	uap->oldfd = cheri_getoffset(tmpcap);

	/* [2] int newfd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_renameat_PTRMASK);
	uap->newfd = cheri_getoffset(tmpcap);

	/* [1] const char * __capability old */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->old),
	    1, CHERIABI_SYS_cheriabi_renameat_PTRMASK);

	/* [3] const char * __capability new */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->new),
	    3, CHERIABI_SYS_cheriabi_renameat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_symlinkat_fill_uap(struct thread *td,
    struct cheriabi_symlinkat_args *uap)
{
	void * __capability tmpcap;

	/* [1] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_symlinkat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path1 */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path1),
	    0, CHERIABI_SYS_cheriabi_symlinkat_PTRMASK);

	/* [2] const char * __capability path2 */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path2),
	    2, CHERIABI_SYS_cheriabi_symlinkat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_unlinkat_fill_uap(struct thread *td,
    struct cheriabi_unlinkat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_unlinkat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_unlinkat_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_unlinkat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_posix_openpt_fill_uap(struct thread *td,
    struct posix_openpt_args *uap)
{
	void * __capability tmpcap;

	/* [0] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_posix_openpt_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_gssd_syscall_fill_uap(struct thread *td,
    struct cheriabi_gssd_syscall_args *uap)
{

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_gssd_syscall_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_jail_get_fill_uap(struct thread *td,
    struct cheriabi_jail_get_args *uap)
{
	void * __capability tmpcap;

	/* [1] unsigned int iovcnt */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_jail_get_PTRMASK);
	uap->iovcnt = cheri_getoffset(tmpcap);

	/* [2] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_jail_get_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] struct iovec_c * __capability iovp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iovp),
	    0, CHERIABI_SYS_cheriabi_jail_get_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_jail_set_fill_uap(struct thread *td,
    struct cheriabi_jail_set_args *uap)
{
	void * __capability tmpcap;

	/* [1] unsigned int iovcnt */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_jail_set_PTRMASK);
	uap->iovcnt = cheri_getoffset(tmpcap);

	/* [2] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_jail_set_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] struct iovec_c * __capability iovp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->iovp),
	    0, CHERIABI_SYS_cheriabi_jail_set_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_jail_remove_fill_uap(struct thread *td,
    struct jail_remove_args *uap)
{
	void * __capability tmpcap;

	/* [0] int jid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_jail_remove_PTRMASK);
	uap->jid = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_closefrom_fill_uap(struct thread *td,
    struct closefrom_args *uap)
{
	void * __capability tmpcap;

	/* [0] int lowfd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_closefrom_PTRMASK);
	uap->lowfd = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___semctl_fill_uap(struct thread *td,
    struct cheriabi___semctl_args *uap)
{
	void * __capability tmpcap;

	/* [0] int semid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi___semctl_PTRMASK);
	uap->semid = cheri_getoffset(tmpcap);

	/* [1] int semnum */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___semctl_PTRMASK);
	uap->semnum = cheri_getoffset(tmpcap);

	/* [2] int cmd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi___semctl_PTRMASK);
	uap->cmd = cheri_getoffset(tmpcap);

	/* [3] union semun_c * __capability arg */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->arg),
	    3, CHERIABI_SYS_cheriabi___semctl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_msgctl_fill_uap(struct thread *td,
    struct cheriabi_msgctl_args *uap)
{
	void * __capability tmpcap;

	/* [0] int msqid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_msgctl_PTRMASK);
	uap->msqid = cheri_getoffset(tmpcap);

	/* [1] int cmd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_msgctl_PTRMASK);
	uap->cmd = cheri_getoffset(tmpcap);

	/* [2] struct msqid_ds_c * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    2, CHERIABI_SYS_cheriabi_msgctl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_shmctl_fill_uap(struct thread *td,
    struct cheriabi_shmctl_args *uap)
{
	void * __capability tmpcap;

	/* [0] int shmid */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_shmctl_PTRMASK);
	uap->shmid = cheri_getoffset(tmpcap);

	/* [1] int cmd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_shmctl_PTRMASK);
	uap->cmd = cheri_getoffset(tmpcap);

	/* [2] struct shmid_ds * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    2, CHERIABI_SYS_cheriabi_shmctl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_lpathconf_fill_uap(struct thread *td,
    struct cheriabi_lpathconf_args *uap)
{
	void * __capability tmpcap;

	/* [1] int name */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_lpathconf_PTRMASK);
	uap->name = cheri_getoffset(tmpcap);

	/* [0] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_lpathconf_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi___cap_rights_get_fill_uap(struct thread *td,
    struct cheriabi___cap_rights_get_args *uap)
{
	void * __capability tmpcap;

	/* [0] int version */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi___cap_rights_get_PTRMASK);
	uap->version = cheri_getoffset(tmpcap);

	/* [1] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi___cap_rights_get_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] cap_rights_t * __capability rightsp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rightsp),
	    2, CHERIABI_SYS_cheriabi___cap_rights_get_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cap_getmode_fill_uap(struct thread *td,
    struct cheriabi_cap_getmode_args *uap)
{

	/* [0] u_int * __capability modep */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->modep),
	    0, CHERIABI_SYS_cheriabi_cap_getmode_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_pdfork_fill_uap(struct thread *td,
    struct cheriabi_pdfork_args *uap)
{
	void * __capability tmpcap;

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_pdfork_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] int * __capability fdp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fdp),
	    0, CHERIABI_SYS_cheriabi_pdfork_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_pdkill_fill_uap(struct thread *td,
    struct pdkill_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_pdkill_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int signum */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_pdkill_PTRMASK);
	uap->signum = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_pdgetpid_fill_uap(struct thread *td,
    struct cheriabi_pdgetpid_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_pdgetpid_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] pid_t * __capability pidp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->pidp),
	    1, CHERIABI_SYS_cheriabi_pdgetpid_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_pselect_fill_uap(struct thread *td,
    struct cheriabi_pselect_args *uap)
{
	void * __capability tmpcap;

	/* [0] int nd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_pselect_PTRMASK);
	uap->nd = cheri_getoffset(tmpcap);

	/* [1] fd_set * __capability in */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->in),
	    1, CHERIABI_SYS_cheriabi_pselect_PTRMASK);

	/* [2] fd_set * __capability ou */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ou),
	    2, CHERIABI_SYS_cheriabi_pselect_PTRMASK);

	/* [3] fd_set * __capability ex */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ex),
	    3, CHERIABI_SYS_cheriabi_pselect_PTRMASK);

	/* [4] const struct timespec * __capability ts */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ts),
	    4, CHERIABI_SYS_cheriabi_pselect_PTRMASK);

	/* [5] const sigset_t * __capability sm */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sm),
	    5, CHERIABI_SYS_cheriabi_pselect_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getloginclass_fill_uap(struct thread *td,
    struct cheriabi_getloginclass_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t namelen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_getloginclass_PTRMASK);
	uap->namelen = cheri_getoffset(tmpcap);

	/* [0] char * __capability namebuf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->namebuf),
	    0, CHERIABI_SYS_cheriabi_getloginclass_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_setloginclass_fill_uap(struct thread *td,
    struct cheriabi_setloginclass_args *uap)
{

	/* [0] const char * __capability namebuf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->namebuf),
	    0, CHERIABI_SYS_cheriabi_setloginclass_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rctl_get_racct_fill_uap(struct thread *td,
    struct cheriabi_rctl_get_racct_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t inbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_rctl_get_racct_PTRMASK);
	uap->inbuflen = cheri_getoffset(tmpcap);

	/* [3] size_t outbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_rctl_get_racct_PTRMASK);
	uap->outbuflen = cheri_getoffset(tmpcap);

	/* [0] const void * __capability inbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->inbufp),
	    0, CHERIABI_SYS_cheriabi_rctl_get_racct_PTRMASK);

	/* [2] void * __capability outbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->outbufp),
	    2, CHERIABI_SYS_cheriabi_rctl_get_racct_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rctl_get_rules_fill_uap(struct thread *td,
    struct cheriabi_rctl_get_rules_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t inbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_rctl_get_rules_PTRMASK);
	uap->inbuflen = cheri_getoffset(tmpcap);

	/* [3] size_t outbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_rctl_get_rules_PTRMASK);
	uap->outbuflen = cheri_getoffset(tmpcap);

	/* [0] const void * __capability inbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->inbufp),
	    0, CHERIABI_SYS_cheriabi_rctl_get_rules_PTRMASK);

	/* [2] void * __capability outbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->outbufp),
	    2, CHERIABI_SYS_cheriabi_rctl_get_rules_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rctl_get_limits_fill_uap(struct thread *td,
    struct cheriabi_rctl_get_limits_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t inbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_rctl_get_limits_PTRMASK);
	uap->inbuflen = cheri_getoffset(tmpcap);

	/* [3] size_t outbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_rctl_get_limits_PTRMASK);
	uap->outbuflen = cheri_getoffset(tmpcap);

	/* [0] const void * __capability inbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->inbufp),
	    0, CHERIABI_SYS_cheriabi_rctl_get_limits_PTRMASK);

	/* [2] void * __capability outbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->outbufp),
	    2, CHERIABI_SYS_cheriabi_rctl_get_limits_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rctl_add_rule_fill_uap(struct thread *td,
    struct cheriabi_rctl_add_rule_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t inbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_rctl_add_rule_PTRMASK);
	uap->inbuflen = cheri_getoffset(tmpcap);

	/* [3] size_t outbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_rctl_add_rule_PTRMASK);
	uap->outbuflen = cheri_getoffset(tmpcap);

	/* [0] const void * __capability inbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->inbufp),
	    0, CHERIABI_SYS_cheriabi_rctl_add_rule_PTRMASK);

	/* [2] void * __capability outbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->outbufp),
	    2, CHERIABI_SYS_cheriabi_rctl_add_rule_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_rctl_remove_rule_fill_uap(struct thread *td,
    struct cheriabi_rctl_remove_rule_args *uap)
{
	void * __capability tmpcap;

	/* [1] size_t inbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_rctl_remove_rule_PTRMASK);
	uap->inbuflen = cheri_getoffset(tmpcap);

	/* [3] size_t outbuflen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_rctl_remove_rule_PTRMASK);
	uap->outbuflen = cheri_getoffset(tmpcap);

	/* [0] const void * __capability inbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->inbufp),
	    0, CHERIABI_SYS_cheriabi_rctl_remove_rule_PTRMASK);

	/* [2] void * __capability outbufp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->outbufp),
	    2, CHERIABI_SYS_cheriabi_rctl_remove_rule_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_posix_fallocate_fill_uap(struct thread *td,
    struct posix_fallocate_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_posix_fallocate_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] off_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_posix_fallocate_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [2] off_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_posix_fallocate_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_posix_fadvise_fill_uap(struct thread *td,
    struct posix_fadvise_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_posix_fadvise_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] off_t offset */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_posix_fadvise_PTRMASK);
	uap->offset = cheri_getoffset(tmpcap);

	/* [2] off_t len */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_posix_fadvise_PTRMASK);
	uap->len = cheri_getoffset(tmpcap);

	/* [3] int advice */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_posix_fadvise_PTRMASK);
	uap->advice = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_wait6_fill_uap(struct thread *td,
    struct cheriabi_wait6_args *uap)
{
	void * __capability tmpcap;

	/* [0] int idtype */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_wait6_PTRMASK);
	uap->idtype = cheri_getoffset(tmpcap);

	/* [1] id_t id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_wait6_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [3] int options */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_wait6_PTRMASK);
	uap->options = cheri_getoffset(tmpcap);

	/* [2] int * __capability status */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->status),
	    2, CHERIABI_SYS_cheriabi_wait6_PTRMASK);

	/* [4] struct __wrusage * __capability wrusage */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->wrusage),
	    4, CHERIABI_SYS_cheriabi_wait6_PTRMASK);

	/* [5] struct siginfo_c * __capability info */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->info),
	    5, CHERIABI_SYS_cheriabi_wait6_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cap_rights_limit_fill_uap(struct thread *td,
    struct cheriabi_cap_rights_limit_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_cap_rights_limit_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] cap_rights_t * __capability rightsp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->rightsp),
	    1, CHERIABI_SYS_cheriabi_cap_rights_limit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cap_ioctls_limit_fill_uap(struct thread *td,
    struct cheriabi_cap_ioctls_limit_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_cap_ioctls_limit_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] size_t ncmds */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_cap_ioctls_limit_PTRMASK);
	uap->ncmds = cheri_getoffset(tmpcap);

	/* [1] const u_long * __capability cmds */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->cmds),
	    1, CHERIABI_SYS_cheriabi_cap_ioctls_limit_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cap_ioctls_get_fill_uap(struct thread *td,
    struct cheriabi_cap_ioctls_get_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_cap_ioctls_get_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] size_t maxcmds */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_cap_ioctls_get_PTRMASK);
	uap->maxcmds = cheri_getoffset(tmpcap);

	/* [1] u_long * __capability cmds */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->cmds),
	    1, CHERIABI_SYS_cheriabi_cap_ioctls_get_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cap_fcntls_limit_fill_uap(struct thread *td,
    struct cap_fcntls_limit_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cap_fcntls_limit_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] uint32_t fcntlrights */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cap_fcntls_limit_PTRMASK);
	uap->fcntlrights = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_cap_fcntls_get_fill_uap(struct thread *td,
    struct cheriabi_cap_fcntls_get_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_cap_fcntls_get_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] uint32_t * __capability fcntlrightsp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fcntlrightsp),
	    1, CHERIABI_SYS_cheriabi_cap_fcntls_get_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_bindat_fill_uap(struct thread *td,
    struct cheriabi_bindat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_bindat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_bindat_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [3] __socklen_t namelen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_bindat_PTRMASK);
	uap->namelen = cheri_getoffset(tmpcap);

	/* [2] const struct sockaddr * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    2, CHERIABI_SYS_cheriabi_bindat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_connectat_fill_uap(struct thread *td,
    struct cheriabi_connectat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_connectat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_connectat_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [3] __socklen_t namelen */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_connectat_PTRMASK);
	uap->namelen = cheri_getoffset(tmpcap);

	/* [2] const struct sockaddr * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    2, CHERIABI_SYS_cheriabi_connectat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_chflagsat_fill_uap(struct thread *td,
    struct cheriabi_chflagsat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_chflagsat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] u_long flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_chflagsat_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [3] int atflag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_chflagsat_PTRMASK);
	uap->atflag = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_chflagsat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_accept4_fill_uap(struct thread *td,
    struct cheriabi_accept4_args *uap)
{
	void * __capability tmpcap;

	/* [0] int s */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_accept4_PTRMASK);
	uap->s = cheri_getoffset(tmpcap);

	/* [3] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_accept4_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [1] struct sockaddr * __capability name */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->name),
	    1, CHERIABI_SYS_cheriabi_accept4_PTRMASK);

	/* [2] __socklen_t * __capability anamelen */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->anamelen),
	    2, CHERIABI_SYS_cheriabi_accept4_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_pipe2_fill_uap(struct thread *td,
    struct cheriabi_pipe2_args *uap)
{
	void * __capability tmpcap;

	/* [1] int flags */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_pipe2_PTRMASK);
	uap->flags = cheri_getoffset(tmpcap);

	/* [0] int * __capability fildes */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fildes),
	    0, CHERIABI_SYS_cheriabi_pipe2_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_aio_mlock_fill_uap(struct thread *td,
    struct cheriabi_aio_mlock_args *uap)
{

	/* [0] struct aiocb_c * __capability aiocbp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->aiocbp),
	    0, CHERIABI_SYS_cheriabi_aio_mlock_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_procctl_fill_uap(struct thread *td,
    struct cheriabi_procctl_args *uap)
{
	void * __capability tmpcap;

	/* [0] int idtype */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_procctl_PTRMASK);
	uap->idtype = cheri_getoffset(tmpcap);

	/* [1] id_t id */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_procctl_PTRMASK);
	uap->id = cheri_getoffset(tmpcap);

	/* [2] int com */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_procctl_PTRMASK);
	uap->com = cheri_getoffset(tmpcap);

	/* [3] void * __capability data */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->data),
	    3, CHERIABI_SYS_cheriabi_procctl_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_ppoll_fill_uap(struct thread *td,
    struct cheriabi_ppoll_args *uap)
{
	void * __capability tmpcap;

	/* [1] u_int nfds */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_ppoll_PTRMASK);
	uap->nfds = cheri_getoffset(tmpcap);

	/* [0] struct pollfd * __capability fds */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->fds),
	    0, CHERIABI_SYS_cheriabi_ppoll_PTRMASK);

	/* [2] const struct timespec * __capability ts */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->ts),
	    2, CHERIABI_SYS_cheriabi_ppoll_PTRMASK);

	/* [3] const sigset_t * __capability set */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->set),
	    3, CHERIABI_SYS_cheriabi_ppoll_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_futimens_fill_uap(struct thread *td,
    struct cheriabi_futimens_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_futimens_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] const struct timespec * __capability times */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->times),
	    1, CHERIABI_SYS_cheriabi_futimens_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_utimensat_fill_uap(struct thread *td,
    struct cheriabi_utimensat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_utimensat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [3] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_utimensat_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_utimensat_PTRMASK);

	/* [2] const struct timespec * __capability times */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->times),
	    2, CHERIABI_SYS_cheriabi_utimensat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_fdatasync_fill_uap(struct thread *td,
    struct fdatasync_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_fdatasync_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fstat_fill_uap(struct thread *td,
    struct cheriabi_fstat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_fstat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] struct stat * __capability sb */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sb),
	    1, CHERIABI_SYS_cheriabi_fstat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fstatat_fill_uap(struct thread *td,
    struct cheriabi_fstatat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_fstatat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [3] int flag */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_fstatat_PTRMASK);
	uap->flag = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_fstatat_PTRMASK);

	/* [2] struct stat * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    2, CHERIABI_SYS_cheriabi_fstatat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fhstat_fill_uap(struct thread *td,
    struct cheriabi_fhstat_args *uap)
{

	/* [0] const struct fhandle * __capability u_fhp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->u_fhp),
	    0, CHERIABI_SYS_cheriabi_fhstat_PTRMASK);

	/* [1] struct stat * __capability sb */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->sb),
	    1, CHERIABI_SYS_cheriabi_fhstat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getdirentries_fill_uap(struct thread *td,
    struct cheriabi_getdirentries_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_getdirentries_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] size_t count */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_getdirentries_PTRMASK);
	uap->count = cheri_getoffset(tmpcap);

	/* [1] char * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_getdirentries_PTRMASK);

	/* [3] off_t * __capability basep */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->basep),
	    3, CHERIABI_SYS_cheriabi_getdirentries_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_statfs_fill_uap(struct thread *td,
    struct cheriabi_statfs_args *uap)
{

	/* [0] char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    0, CHERIABI_SYS_cheriabi_statfs_PTRMASK);

	/* [1] struct statfs * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_statfs_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fstatfs_fill_uap(struct thread *td,
    struct cheriabi_fstatfs_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_fstatfs_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [1] struct statfs * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_fstatfs_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_getfsstat_fill_uap(struct thread *td,
    struct cheriabi_getfsstat_args *uap)
{
	void * __capability tmpcap;

	/* [1] long bufsize */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 1, CHERIABI_SYS_cheriabi_getfsstat_PTRMASK);
	uap->bufsize = cheri_getoffset(tmpcap);

	/* [2] int mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_getfsstat_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [0] struct statfs * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    0, CHERIABI_SYS_cheriabi_getfsstat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_fhstatfs_fill_uap(struct thread *td,
    struct cheriabi_fhstatfs_args *uap)
{

	/* [0] const struct fhandle * __capability u_fhp */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->u_fhp),
	    0, CHERIABI_SYS_cheriabi_fhstatfs_PTRMASK);

	/* [1] struct statfs * __capability buf */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->buf),
	    1, CHERIABI_SYS_cheriabi_fhstatfs_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_mknodat_fill_uap(struct thread *td,
    struct cheriabi_mknodat_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_mknodat_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] mode_t mode */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_mknodat_PTRMASK);
	uap->mode = cheri_getoffset(tmpcap);

	/* [3] dev_t dev */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 3, CHERIABI_SYS_cheriabi_mknodat_PTRMASK);
	uap->dev = cheri_getoffset(tmpcap);

	/* [1] const char * __capability path */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->path),
	    1, CHERIABI_SYS_cheriabi_mknodat_PTRMASK);

	return (0);
}

static inline int
CHERIABI_SYS_cheriabi_kevent_fill_uap(struct thread *td,
    struct cheriabi_kevent_args *uap)
{
	void * __capability tmpcap;

	/* [0] int fd */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 0, CHERIABI_SYS_cheriabi_kevent_PTRMASK);
	uap->fd = cheri_getoffset(tmpcap);

	/* [2] int nchanges */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 2, CHERIABI_SYS_cheriabi_kevent_PTRMASK);
	uap->nchanges = cheri_getoffset(tmpcap);

	/* [4] int nevents */
	cheriabi_fetch_syscall_arg(td, &tmpcap, 4, CHERIABI_SYS_cheriabi_kevent_PTRMASK);
	uap->nevents = cheri_getoffset(tmpcap);

	/* [1] const struct kevent_c * __capability changelist */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->changelist),
	    1, CHERIABI_SYS_cheriabi_kevent_PTRMASK);

	/* [3] struct kevent_c * __capability eventlist */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->eventlist),
	    3, CHERIABI_SYS_cheriabi_kevent_PTRMASK);

	/* [5] const struct timespec * __capability timeout */
	cheriabi_fetch_syscall_arg(td,
	    __DECONST(void * __capability *, &uap->timeout),
	    5, CHERIABI_SYS_cheriabi_kevent_PTRMASK);

	return (0);
}

#endif /* !_SYS_COMPAT_CHERIABI_FILL_UAP_H_ */
