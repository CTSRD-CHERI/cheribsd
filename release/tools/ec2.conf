#!/bin/sh

# Packages which should be installed onto all EC2 AMIs:
# * ebsnvme-id, which is very minimal and provides important EBS-specific
# functionality,
# * amazon-ssm-agent (not enabled by default, but some users need to use
# it on systems not connected to the internet).
export VM_EXTRA_PACKAGES="${VM_EXTRA_PACKAGES} ebsnvme-id amazon-ssm-agent"

# Services which should be enabled by default in rc.conf(5).
export VM_RC_LIST="dev_aws_disk ntpd"

# Build with a 4.9 GB partition; the growfs rc.d script will expand
# the partition to fill the root disk after the EC2 instance is launched.
# Note that if this is set to <N>G, we will end up with an <N+1> GB disk
# image since VMSIZE is the size of the filesystem partition, not the disk
# which it resides within.
export VMSIZE=5000m

# No swap space; it doesn't make sense to provision any as part of the disk
# image when we could be launching onto a system with anywhere between 0.5
# and 4096 GB of RAM.
export NOSWAP=YES

ec2_common() {
	# Delete the pkg package and the repo database; they will likely be
	# long out of date before the EC2 instance is launched.
	mount -t devfs devfs ${DESTDIR}/dev
	chroot ${DESTDIR} ${EMULATOR} env ASSUME_ALWAYS_YES=yes \
		/usr/sbin/pkg delete -f -y pkg
	umount ${DESTDIR}/dev
	rm ${DESTDIR}/var/db/pkg/repo-*.sqlite

	# Turn off IPv6 Duplicate Address Detection; the EC2 networking
	# configuration makes it unnecessary.
	echo 'net.inet6.ip6.dad_count=0' >> ${DESTDIR}/etc/sysctl.conf

	# Booting quickly is more important than giving users a chance to
	# access the boot loader via the serial port.
	echo 'autoboot_delay="-1"' >> ${DESTDIR}/boot/loader.conf
	echo 'beastie_disable="YES"' >> ${DESTDIR}/boot/loader.conf

	# Tell gptboot not to wait 3 seconds for a keypress which will
	# never arrive.
	printf -- "-n\n" > ${DESTDIR}/boot.config

	# The emulated keyboard attached to EC2 instances is inaccessible to
	# users, and there is no mouse attached at all; disable to keyboard
	# and the keyboard controller (to which the mouse would attach, if
	# one existed) in order to save time in device probing.
	echo 'hint.atkbd.0.disabled=1' >> ${DESTDIR}/boot/loader.conf
	echo 'hint.atkbdc.0.disabled=1' >> ${DESTDIR}/boot/loader.conf

	# EC2 has two consoles: An emulated serial port ("system log"),
	# which has been present since 2006; and a VGA console ("instance
	# screenshot") which was introduced in 2016.
	echo 'boot_multicons="YES"' >> ${DESTDIR}/boot/loader.conf

	# Some older EC2 hardware used a version of Xen with a bug in its
	# emulated serial port.  It is not clear if EC2 still has any such
	# nodes, but apply the workaround just in case.
	echo 'hw.broken_txfifo="1"' >> ${DESTDIR}/boot/loader.conf

	# Load the kernel module for the Amazon "Elastic Network Adapter"
	echo 'if_ena_load="YES"' >> ${DESTDIR}/boot/loader.conf

	# Use the "nda" driver for accessing NVMe disks rather than the
	# historical "nvd" driver.
	echo 'hw.nvme.use_nvd="0"' >> ${DESTDIR}/boot/loader.conf

	# Disable KbdInteractiveAuthentication according to EC2 requirements.
	sed -i '' -e \
		's/^#KbdInteractiveAuthentication yes/KbdInteractiveAuthentication no/' \
		${DESTDIR}/etc/ssh/sshd_config

	# Use FreeBSD Update mirrors hosted in AWS
	sed -i '' -e 's/update.FreeBSD.org/aws.update.FreeBSD.org/' \
		${DESTDIR}/etc/freebsd-update.conf

	# Use the NTP service provided by Amazon
	sed -i '' -e 's/^pool/#pool/' \
		-e '1,/^#server/s/^#server.*/server 169.254.169.123 iburst/' \
		${DESTDIR}/etc/ntp.conf

	# Provide a map for accessing Elastic File System mounts
	cat > ${DESTDIR}/etc/autofs/special_efs <<'EOF'
#!/bin/sh

if [ $# -eq 0 ]; then
        # No way to know which EFS filesystems exist and are
        # accessible to this EC2 instance.
        exit 0
fi

# Provide instructions on how to mount the requested filesystem.
FS=$1
REGION=`fetch -qo- http://169.254.169.254/latest/meta-data/placement/availability-zone | sed -e 's/[a-z]$//'`
echo "-nfsv4,minorversion=1,oneopenown ${FS}.efs.${REGION}.amazonaws.com:/"
EOF
	chmod 755 ${DESTDIR}/etc/autofs/special_efs

	# The first time the AMI boots, run "first boot" scripts.
	touch ${DESTDIR}/firstboot

	if ! [ -z "${QEMUSTATIC}" ]; then
		rm -f ${DESTDIR}/${EMULATOR}
	fi
	rm -f ${DESTDIR}/etc/resolv.conf

	return 0
}
