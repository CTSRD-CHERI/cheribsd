--- sanitizer_common/sanitizer_symbolizer_markup.o ---
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup.cpp:31:32: warning: format specifies type 'void *' but the argument has type 'uptr' (aka 'unsigned long') [-Wformat]
   31 |   buffer->AppendF(kFormatData, DI->start);
      |                   ~~~~~~~~~~~  ^~~~~~~~~
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup_constants.h:33:46: note: format string is defined here
   33 | constexpr const char *kFormatData = "{{{data:%p}}}";
      |                                              ^~
      |                                              %lu
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup.cpp:46:43: warning: format specifies type 'void *' but the argument has type 'uptr' (aka 'unsigned long') [-Wformat]
   46 |   buffer->AppendF(kFormatFrame, frame_no, address);
      |                   ~~~~~~~~~~~~            ^~~~~~~
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup_constants.h:36:48: note: format string is defined here
   36 | constexpr const char *kFormatFrame = "{{{bt:%u:%p}}}";
      |                                                ^~
      |                                                %lu
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup.cpp:51:62: warning: format specifies type 'void *' but the argument has type 'uptr' (aka 'unsigned long') [-Wformat]
   51 |   internal_snprintf(buffer, sizeof(buffer), kFormatFunction, addr);
      |                                             ~~~~~~~~~~~~~~~  ^~~~
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup_constants.h:29:48: note: format string is defined here
   29 | constexpr const char *kFormatFunction = "{{{pc:%p}}}";
      |                                                ^~
      |                                                %lu
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup.cpp:99:34: warning: format specifies type 'int' but the argument has type 'uptr' (aka 'unsigned long') [-Wformat]
   99 |   buffer->AppendF(kFormatModule, moduleId, module.full_name(),
      |                   ~~~~~~~~~~~~~  ^~~~~~~~
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup_constants.h:39:50: note: format string is defined here
   39 | constexpr const char *kFormatModule = "{{{module:%d:%s:elf:%s}}}";
      |                                                  ^~
      |                                                  %lu
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup.cpp:121:34: warning: format specifies type 'void *' but the argument has type 'uptr' (aka 'unsigned long') [-Wformat]
  121 |     buffer->AppendF(kFormatMmap, range.beg, range.end - range.beg, moduleId,
      |                     ~~~~~~~~~~~  ^~~~~~~~~
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup_constants.h:42:46: note: format string is defined here
   42 | constexpr const char *kFormatMmap = "{{{mmap:%p:0x%x:load:%d:%s:0x%x}}}";
      |                                              ^~
      |                                              %lu
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup.cpp:121:45: warning: format specifies type 'unsigned int' but the argument has type 'uptr' (aka 'unsigned long') [-Wformat]
  121 |     buffer->AppendF(kFormatMmap, range.beg, range.end - range.beg, moduleId,
      |                     ~~~~~~~~~~~             ^~~~~~~~~~~~~~~~~~~~~
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup_constants.h:42:51: note: format string is defined here
   42 | constexpr const char *kFormatMmap = "{{{mmap:%p:0x%x:load:%d:%s:0x%x}}}";
      |                                                   ^~
      |                                                   %lx
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup.cpp:121:68: warning: format specifies type 'int' but the argument has type 'uptr' (aka 'unsigned long') [-Wformat]
  121 |     buffer->AppendF(kFormatMmap, range.beg, range.end - range.beg, moduleId,
      |                     ~~~~~~~~~~~                                    ^~~~~~~~
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup_constants.h:42:59: note: format string is defined here
   42 | constexpr const char *kFormatMmap = "{{{mmap:%p:0x%x:load:%d:%s:0x%x}}}";
      |                                                           ^~
      |                                                           %lu
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup.cpp:122:42: warning: format specifies type 'unsigned int' but the argument has type 'uptr' (aka 'unsigned long') [-Wformat]
  121 |     buffer->AppendF(kFormatMmap, range.beg, range.end - range.beg, moduleId,
      |                     ~~~~~~~~~~~
  122 |                     accessBuffer.data(), range.beg - module.base_address());
      |                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/share/dim/src/freebsd/llvm-18-update/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_symbolizer_markup_constants.h:42:67: note: format string is defined here
   42 | constexpr const char *kFormatMmap = "{{{mmap:%p:0x%x:load:%d:%s:0x%x}}}";
      |                                                                   ^~
      |                                                                   %lx
8 warnings generated.
