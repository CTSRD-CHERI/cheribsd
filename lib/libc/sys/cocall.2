.\"
.\" Copyright (c) 2018 Edward Tomasz Napierala <en322@cl.cam.ac.uk>
.\" All rights reserved.
.\"
.\" This software was developed by SRI International and the University of
.\" Cambridge Computer Laboratory under DARPA/AFRL contract (FA8750-10-C-0237)
.\" ("CTSRD"), as part of the DARPA CRASH research programme.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd April 30, 2018
.Dt COCALL 2
.Os
.Sh NAME
.Nm COCALL
.Nd perform a colocated call
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn cocall "void * __capability code" "void * __capability data" "void * __capability target" "void * __capability buf" "size_t len"
.Sh DESCRIPTION
The
.Fn cocall
function performs a colocated call to the callee indicated by the
.Ar target
argument.
Before passing the execution to the callee, at most
.Fa len
bytes pointed to by
.Fa buf
will be copied to the buffer provided by the callee; before returning the data
will be copied from the callee back to the calling side.
.Pp
The
.Ar code
and
.Ar data
arguments must point to a sealed capability pair obtained from
.Xr cosetup 2 .
The
.Ar target
argument is a sealed capability usually retrieved with
.Xr colookup 2 .
Both the
.Fa buf
and the
.Fa len
must be 8-byte aligned.
.Sh RETURN VALUES
.Rv -std cocall
.Sh ERRORS
The
.Fn cocall
system call
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa code ,
.Fa data ,
or
.Fa target
arguments are invalid.
.It Bq Er EFAULT
The
.Fa data
argument
points outside the process's allocated address space.
.El
.Sh EXAMPLES
Basic usage example:
.Bd -literal
	void * __capability switcher_code;
	void * __capability switcher_data;
	void * __capability lookedup;
	uint64_t buf[MAXBSIZE];

	error = cosetup(COSETUP_COCALL, &switcher_code, &switcher_data);
	if (error != 0)
		err(1, "cosetup");

	error = colookup("target-name", &lookedup);
	if (error != 0)
		err(1, "colookup");

	error = cocall(switcher_code, switcher_data, lookedup, buf, sizeof(buf));
	if (error != 0)
		err(1, "cocall");
.Ed
.Sh SEE ALSO
.Xr coping 1 ,
.Xr coexec 2 ,
.Xr cosetup 2 ,
.Xr coregister 2 ,
.Xr colookup 2 ,
.Xr coaccept 2
.Sh HISTORY
The
.Fn cocall
system call first appeared in
.Tn CheriBSD .
.Sh AUTHORS
.An -nosplit
These functions were created by
.An Edward Tomasz Napierala Aq Mt trasz@FreeBSD.org
at the University of Cambridge Computer Laboratory under DARPA/AFRL contract
(FA8750-10-C-0237) ("CTSRD"), as part of the DARPA CRASH research programme.
